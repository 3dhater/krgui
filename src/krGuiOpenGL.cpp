/*
 Some code is taken from https://github.com/ocornut/imgui
 Dear ImGui is licensed under the MIT License
*/

#include "KrGui.h"

using namespace Kr;

#ifdef KRGUI_COMPILE_WITH_OPENGL3

#include <cstdio>

#include "krGuiOpenGL.h"
#ifdef KRGUI_PLATFORM_WINDOWS
#ifndef WIN32_LEAN_AND_MEAN
#define WIN32_LEAN_AND_MEAN
#endif
#include <Windows.h>
HMODULE g_OpenGL_lib = nullptr;
wglChoosePixelFormatARB_t gwglChoosePixelFormatARB = nullptr;
wglCreateContextAttribsARB_t gwglCreateContextAttribsARB = nullptr;
wglSwapIntervalEXT_t gwglSwapIntervalEXT = nullptr;
wglCreateContext_t gwglCreateContext = nullptr;
wglMakeCurrent_t gwglMakeCurrent = nullptr;
wglGetProcAddress_t gwglGetProcAddress = nullptr;
wglDeleteContext_t gwglDeleteContext = nullptr;
namespace Kr
{
void* getOpenGLProc(const char *proc)
{
	void *res = nullptr;

	if(gwglGetProcAddress)
		res = gwglGetProcAddress(proc);
	if (!res)
		res = GetProcAddress(g_OpenGL_lib, proc);
	return res;
}
}
#else
#error For Windows
#endif
PFNGLCULLFACEPROC gglCullFace;
PFNGLFRONTFACEPROC gglFrontFace;
PFNGLHINTPROC gglHint;
PFNGLLINEWIDTHPROC gglLineWidth;
PFNGLPOINTSIZEPROC gglPointSize;
PFNGLPOLYGONMODEPROC gglPolygonMode;
PFNGLSCISSORPROC gglScissor;
PFNGLTEXPARAMETERFPROC gglTexParameterf;
PFNGLTEXPARAMETERFVPROC gglTexParameterfv;
PFNGLTEXPARAMETERIPROC gglTexParameteri;
PFNGLTEXPARAMETERIVPROC gglTexParameteriv;
PFNGLTEXIMAGE1DPROC gglTexImage1D;
PFNGLTEXIMAGE2DPROC gglTexImage2D;
PFNGLDRAWBUFFERPROC gglDrawBuffer;
PFNGLCLEARPROC gglClear;
PFNGLCLEARCOLORPROC gglClearColor;
PFNGLCLEARSTENCILPROC gglClearStencil;
PFNGLCLEARDEPTHPROC gglClearDepth;
PFNGLSTENCILMASKPROC gglStencilMask;
PFNGLCOLORMASKPROC gglColorMask;
PFNGLDEPTHMASKPROC gglDepthMask;
PFNGLDISABLEPROC gglDisable;
PFNGLENABLEPROC gglEnable;
PFNGLFINISHPROC gglFinish;
PFNGLFLUSHPROC gglFlush;
PFNGLBLENDFUNCPROC gglBlendFunc;
PFNGLLOGICOPPROC gglLogicOp;
PFNGLSTENCILFUNCPROC gglStencilFunc;
PFNGLSTENCILOPPROC gglStencilOp;
PFNGLDEPTHFUNCPROC gglDepthFunc;
PFNGLPIXELSTOREFPROC gglPixelStoref;
PFNGLPIXELSTOREIPROC gglPixelStorei;
PFNGLREADBUFFERPROC gglReadBuffer;
PFNGLREADPIXELSPROC gglReadPixels;
PFNGLGETBOOLEANVPROC gglGetBooleanv;
PFNGLGETDOUBLEVPROC gglGetDoublev;
PFNGLGETERRORPROC gglGetError;
PFNGLGETFLOATVPROC gglGetFloatv;
PFNGLGETINTEGERVPROC gglGetIntegerv;
PFNGLGETSTRINGPROC gglGetString;
PFNGLGETTEXIMAGEPROC gglGetTexImage;
PFNGLGETTEXPARAMETERFVPROC gglGetTexParameterfv;
PFNGLGETTEXPARAMETERIVPROC gglGetTexParameteriv;
PFNGLGETTEXLEVELPARAMETERFVPROC gglGetTexLevelParameterfv;
PFNGLGETTEXLEVELPARAMETERIVPROC gglGetTexLevelParameteriv;
PFNGLISENABLEDPROC gglIsEnabled;
PFNGLDEPTHRANGEPROC gglDepthRange;
PFNGLVIEWPORTPROC gglViewport;
PFNGLDRAWARRAYSPROC gglDrawArrays;
PFNGLDRAWELEMENTSPROC gglDrawElements;
PFNGLGETPOINTERVPROC gglGetPointerv;
PFNGLPOLYGONOFFSETPROC gglPolygonOffset;
PFNGLCOPYTEXIMAGE1DPROC gglCopyTexImage1D;
PFNGLCOPYTEXIMAGE2DPROC gglCopyTexImage2D;
PFNGLCOPYTEXSUBIMAGE1DPROC gglCopyTexSubImage1D;
PFNGLCOPYTEXSUBIMAGE2DPROC gglCopyTexSubImage2D;
PFNGLTEXSUBIMAGE1DPROC gglTexSubImage1D;
PFNGLTEXSUBIMAGE2DPROC gglTexSubImage2D;
PFNGLBINDTEXTUREPROC gglBindTexture;
PFNGLDELETETEXTURESPROC gglDeleteTextures;
PFNGLGENTEXTURESPROC gglGenTextures;
PFNGLISTEXTUREPROC gglIsTexture;
PFNGLBLENDCOLORPROC gglBlendColor;
PFNGLBLENDEQUATIONPROC gglBlendEquation;
PFNGLDRAWRANGEELEMENTSPROC gglDrawRangeElements;
PFNGLTEXIMAGE3DPROC gglTexImage3D;
PFNGLTEXSUBIMAGE3DPROC gglTexSubImage3D;
PFNGLCOPYTEXSUBIMAGE3DPROC gglCopyTexSubImage3D;
PFNGLACTIVETEXTUREPROC gglActiveTexture;
PFNGLSAMPLECOVERAGEPROC gglSampleCoverage;
PFNGLCOMPRESSEDTEXIMAGE3DPROC gglCompressedTexImage3D;
PFNGLCOMPRESSEDTEXIMAGE2DPROC gglCompressedTexImage2D;
PFNGLCOMPRESSEDTEXIMAGE1DPROC gglCompressedTexImage1D;
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC gglCompressedTexSubImage3D;
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC gglCompressedTexSubImage2D;
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC gglCompressedTexSubImage1D;
PFNGLGETCOMPRESSEDTEXIMAGEPROC gglGetCompressedTexImage;
PFNGLBLENDFUNCSEPARATEPROC gglBlendFuncSeparate;
PFNGLMULTIDRAWARRAYSPROC gglMultiDrawArrays;
PFNGLMULTIDRAWELEMENTSPROC gglMultiDrawElements;
PFNGLPOINTPARAMETERFPROC gglPointParameterf;
PFNGLPOINTPARAMETERFVPROC gglPointParameterfv;
PFNGLPOINTPARAMETERIPROC gglPointParameteri;
PFNGLPOINTPARAMETERIVPROC gglPointParameteriv;
PFNGLGENQUERIESPROC gglGenQueries;
PFNGLDELETEQUERIESPROC gglDeleteQueries;
PFNGLISQUERYPROC gglIsQuery;
PFNGLBEGINQUERYPROC gglBeginQuery;
PFNGLENDQUERYPROC gglEndQuery;
PFNGLGETQUERYIVPROC gglGetQueryiv;
PFNGLGETQUERYOBJECTIVPROC gglGetQueryObjectiv;
PFNGLGETQUERYOBJECTUIVPROC gglGetQueryObjectuiv;
PFNGLBINDBUFFERPROC gglBindBuffer;
PFNGLDELETEBUFFERSPROC gglDeleteBuffers;
PFNGLGENBUFFERSPROC gglGenBuffers;
PFNGLISBUFFERPROC gglIsBuffer;
PFNGLBUFFERDATAPROC gglBufferData;
PFNGLBUFFERSUBDATAPROC gglBufferSubData;
PFNGLGETBUFFERSUBDATAPROC gglGetBufferSubData;
PFNGLMAPBUFFERPROC gglMapBuffer;
PFNGLUNMAPBUFFERPROC gglUnmapBuffer;
PFNGLGETBUFFERPARAMETERIVPROC gglGetBufferParameteriv;
PFNGLGETBUFFERPOINTERVPROC gglGetBufferPointerv;
PFNGLBLENDEQUATIONSEPARATEPROC gglBlendEquationSeparate;
PFNGLDRAWBUFFERSPROC gglDrawBuffers;
PFNGLSTENCILOPSEPARATEPROC gglStencilOpSeparate;
PFNGLSTENCILFUNCSEPARATEPROC gglStencilFuncSeparate;
PFNGLSTENCILMASKSEPARATEPROC gglStencilMaskSeparate;
PFNGLATTACHSHADERPROC gglAttachShader;
PFNGLBINDATTRIBLOCATIONPROC gglBindAttribLocation;
PFNGLCOMPILESHADERPROC gglCompileShader;
PFNGLCREATEPROGRAMPROC gglCreateProgram;
PFNGLCREATESHADERPROC gglCreateShader;
PFNGLDELETEPROGRAMPROC gglDeleteProgram;
PFNGLDELETESHADERPROC gglDeleteShader;
PFNGLDETACHSHADERPROC gglDetachShader;
PFNGLDISABLEVERTEXATTRIBARRAYPROC gglDisableVertexAttribArray;
PFNGLENABLEVERTEXATTRIBARRAYPROC gglEnableVertexAttribArray;
PFNGLGETACTIVEATTRIBPROC gglGetActiveAttrib;
PFNGLGETACTIVEUNIFORMPROC gglGetActiveUniform;
PFNGLGETATTACHEDSHADERSPROC gglGetAttachedShaders;
PFNGLGETATTRIBLOCATIONPROC gglGetAttribLocation;
PFNGLGETPROGRAMIVPROC gglGetProgramiv;
PFNGLGETPROGRAMINFOLOGPROC gglGetProgramInfoLog;
PFNGLGETSHADERIVPROC gglGetShaderiv;
PFNGLGETSHADERINFOLOGPROC gglGetShaderInfoLog;
PFNGLGETSHADERSOURCEPROC gglGetShaderSource;
PFNGLGETUNIFORMLOCATIONPROC gglGetUniformLocation;
PFNGLGETUNIFORMFVPROC gglGetUniformfv;
PFNGLGETUNIFORMIVPROC gglGetUniformiv;
PFNGLGETVERTEXATTRIBDVPROC gglGetVertexAttribdv;
PFNGLGETVERTEXATTRIBFVPROC gglGetVertexAttribfv;
PFNGLGETVERTEXATTRIBIVPROC gglGetVertexAttribiv;
PFNGLGETVERTEXATTRIBPOINTERVPROC gglGetVertexAttribPointerv;
PFNGLISPROGRAMPROC gglIsProgram;
PFNGLISSHADERPROC gglIsShader;
PFNGLLINKPROGRAMPROC gglLinkProgram;
PFNGLSHADERSOURCEPROC gglShaderSource;
PFNGLUSEPROGRAMPROC gglUseProgram;
PFNGLUNIFORM1FPROC gglUniform1f;
PFNGLUNIFORM2FPROC gglUniform2f;
PFNGLUNIFORM3FPROC gglUniform3f;
PFNGLUNIFORM4FPROC gglUniform4f;
PFNGLUNIFORM1IPROC gglUniform1i;
PFNGLUNIFORM2IPROC gglUniform2i;
PFNGLUNIFORM3IPROC gglUniform3i;
PFNGLUNIFORM4IPROC gglUniform4i;
PFNGLUNIFORM1FVPROC gglUniform1fv;
PFNGLUNIFORM2FVPROC gglUniform2fv;
PFNGLUNIFORM3FVPROC gglUniform3fv;
PFNGLUNIFORM4FVPROC gglUniform4fv;
PFNGLUNIFORM1IVPROC gglUniform1iv;
PFNGLUNIFORM2IVPROC gglUniform2iv;
PFNGLUNIFORM3IVPROC gglUniform3iv;
PFNGLUNIFORM4IVPROC gglUniform4iv;
PFNGLUNIFORMMATRIX2FVPROC gglUniformMatrix2fv;
PFNGLUNIFORMMATRIX3FVPROC gglUniformMatrix3fv;
PFNGLUNIFORMMATRIX4FVPROC gglUniformMatrix4fv;
PFNGLVALIDATEPROGRAMPROC gglValidateProgram;
PFNGLVERTEXATTRIB1DPROC gglVertexAttrib1d;
PFNGLVERTEXATTRIB1DVPROC gglVertexAttrib1dv;
PFNGLVERTEXATTRIB1FPROC gglVertexAttrib1f;
PFNGLVERTEXATTRIB1FVPROC gglVertexAttrib1fv;
PFNGLVERTEXATTRIB1SPROC gglVertexAttrib1s;
PFNGLVERTEXATTRIB1SVPROC gglVertexAttrib1sv;
PFNGLVERTEXATTRIB2DPROC gglVertexAttrib2d;
PFNGLVERTEXATTRIB2DVPROC gglVertexAttrib2dv;
PFNGLVERTEXATTRIB2FPROC gglVertexAttrib2f;
PFNGLVERTEXATTRIB2FVPROC gglVertexAttrib2fv;
PFNGLVERTEXATTRIB2SPROC gglVertexAttrib2s;
PFNGLVERTEXATTRIB2SVPROC gglVertexAttrib2sv;
PFNGLVERTEXATTRIB3DPROC gglVertexAttrib3d;
PFNGLVERTEXATTRIB3DVPROC gglVertexAttrib3dv;
PFNGLVERTEXATTRIB3FPROC gglVertexAttrib3f;
PFNGLVERTEXATTRIB3FVPROC gglVertexAttrib3fv;
PFNGLVERTEXATTRIB3SPROC gglVertexAttrib3s;
PFNGLVERTEXATTRIB3SVPROC gglVertexAttrib3sv;
PFNGLVERTEXATTRIB4NBVPROC gglVertexAttrib4Nbv;
PFNGLVERTEXATTRIB4NIVPROC gglVertexAttrib4Niv;
PFNGLVERTEXATTRIB4NSVPROC gglVertexAttrib4Nsv;
PFNGLVERTEXATTRIB4NUBPROC gglVertexAttrib4Nub;
PFNGLVERTEXATTRIB4NUBVPROC gglVertexAttrib4Nubv;
PFNGLVERTEXATTRIB4NUIVPROC gglVertexAttrib4Nuiv;
PFNGLVERTEXATTRIB4NUSVPROC gglVertexAttrib4Nusv;
PFNGLVERTEXATTRIB4BVPROC gglVertexAttrib4bv;
PFNGLVERTEXATTRIB4DPROC gglVertexAttrib4d;
PFNGLVERTEXATTRIB4DVPROC gglVertexAttrib4dv;
PFNGLVERTEXATTRIB4FPROC gglVertexAttrib4f;
PFNGLVERTEXATTRIB4FVPROC gglVertexAttrib4fv;
PFNGLVERTEXATTRIB4IVPROC gglVertexAttrib4iv;
PFNGLVERTEXATTRIB4SPROC gglVertexAttrib4s;
PFNGLVERTEXATTRIB4SVPROC gglVertexAttrib4sv;
PFNGLVERTEXATTRIB4UBVPROC gglVertexAttrib4ubv;
PFNGLVERTEXATTRIB4UIVPROC gglVertexAttrib4uiv;
PFNGLVERTEXATTRIB4USVPROC gglVertexAttrib4usv;
PFNGLVERTEXATTRIBPOINTERPROC gglVertexAttribPointer;
PFNGLUNIFORMMATRIX2X3FVPROC gglUniformMatrix2x3fv;
PFNGLUNIFORMMATRIX3X2FVPROC gglUniformMatrix3x2fv;
PFNGLUNIFORMMATRIX2X4FVPROC gglUniformMatrix2x4fv;
PFNGLUNIFORMMATRIX4X2FVPROC gglUniformMatrix4x2fv;
PFNGLUNIFORMMATRIX3X4FVPROC gglUniformMatrix3x4fv;
PFNGLUNIFORMMATRIX4X3FVPROC gglUniformMatrix4x3fv;
PFNGLCOLORMASKIPROC gglColorMaski;
PFNGLGETBOOLEANI_VPROC gglGetBooleani_v;
PFNGLGETINTEGERI_VPROC gglGetIntegeri_v;
PFNGLENABLEIPROC gglEnablei;
PFNGLDISABLEIPROC gglDisablei;
PFNGLISENABLEDIPROC gglIsEnabledi;
PFNGLBEGINTRANSFORMFEEDBACKPROC gglBeginTransformFeedback;
PFNGLENDTRANSFORMFEEDBACKPROC gglEndTransformFeedback;
PFNGLBINDBUFFERRANGEPROC gglBindBufferRange;
PFNGLBINDBUFFERBASEPROC gglBindBufferBase;
PFNGLTRANSFORMFEEDBACKVARYINGSPROC gglTransformFeedbackVaryings;
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC gglGetTransformFeedbackVarying;
PFNGLCLAMPCOLORPROC gglClampColor;
PFNGLBEGINCONDITIONALRENDERPROC gglBeginConditionalRender;
PFNGLENDCONDITIONALRENDERPROC gglEndConditionalRender;
PFNGLVERTEXATTRIBIPOINTERPROC gglVertexAttribIPointer;
PFNGLGETVERTEXATTRIBIIVPROC gglGetVertexAttribIiv;
PFNGLGETVERTEXATTRIBIUIVPROC gglGetVertexAttribIuiv;
PFNGLVERTEXATTRIBI1IPROC gglVertexAttribI1i;
PFNGLVERTEXATTRIBI2IPROC gglVertexAttribI2i;
PFNGLVERTEXATTRIBI3IPROC gglVertexAttribI3i;
PFNGLVERTEXATTRIBI4IPROC gglVertexAttribI4i;
PFNGLVERTEXATTRIBI1UIPROC gglVertexAttribI1ui;
PFNGLVERTEXATTRIBI2UIPROC gglVertexAttribI2ui;
PFNGLVERTEXATTRIBI3UIPROC gglVertexAttribI3ui;
PFNGLVERTEXATTRIBI4UIPROC gglVertexAttribI4ui;
PFNGLVERTEXATTRIBI1IVPROC gglVertexAttribI1iv;
PFNGLVERTEXATTRIBI2IVPROC gglVertexAttribI2iv;
PFNGLVERTEXATTRIBI3IVPROC gglVertexAttribI3iv;
PFNGLVERTEXATTRIBI4IVPROC gglVertexAttribI4iv;
PFNGLVERTEXATTRIBI1UIVPROC gglVertexAttribI1uiv;
PFNGLVERTEXATTRIBI2UIVPROC gglVertexAttribI2uiv;
PFNGLVERTEXATTRIBI3UIVPROC gglVertexAttribI3uiv;
PFNGLVERTEXATTRIBI4UIVPROC gglVertexAttribI4uiv;
PFNGLVERTEXATTRIBI4BVPROC gglVertexAttribI4bv;
PFNGLVERTEXATTRIBI4SVPROC gglVertexAttribI4sv;
PFNGLVERTEXATTRIBI4UBVPROC gglVertexAttribI4ubv;
PFNGLVERTEXATTRIBI4USVPROC gglVertexAttribI4usv;
PFNGLGETUNIFORMUIVPROC gglGetUniformuiv;
PFNGLBINDFRAGDATALOCATIONPROC gglBindFragDataLocation;
PFNGLGETFRAGDATALOCATIONPROC gglGetFragDataLocation;
PFNGLUNIFORM1UIPROC gglUniform1ui;
PFNGLUNIFORM2UIPROC gglUniform2ui;
PFNGLUNIFORM3UIPROC gglUniform3ui;
PFNGLUNIFORM4UIPROC gglUniform4ui;
PFNGLUNIFORM1UIVPROC gglUniform1uiv;
PFNGLUNIFORM2UIVPROC gglUniform2uiv;
PFNGLUNIFORM3UIVPROC gglUniform3uiv;
PFNGLUNIFORM4UIVPROC gglUniform4uiv;
PFNGLTEXPARAMETERIIVPROC gglTexParameterIiv;
PFNGLTEXPARAMETERIUIVPROC gglTexParameterIuiv;
PFNGLGETTEXPARAMETERIIVPROC gglGetTexParameterIiv;
PFNGLGETTEXPARAMETERIUIVPROC gglGetTexParameterIuiv;
PFNGLCLEARBUFFERIVPROC gglClearBufferiv;
PFNGLCLEARBUFFERUIVPROC gglClearBufferuiv;
PFNGLCLEARBUFFERFVPROC gglClearBufferfv;
PFNGLCLEARBUFFERFIPROC gglClearBufferfi;
PFNGLGETSTRINGIPROC gglGetStringi;
PFNGLDRAWARRAYSINSTANCEDPROC gglDrawArraysInstanced;
PFNGLDRAWELEMENTSINSTANCEDPROC gglDrawElementsInstanced;
PFNGLTEXBUFFERPROC gglTexBuffer;
PFNGLPRIMITIVERESTARTINDEXPROC gglPrimitiveRestartIndex;
PFNGLGETINTEGER64I_VPROC gglGetInteger64i_v;
PFNGLGETBUFFERPARAMETERI64VPROC gglGetBufferParameteri64v;
PFNGLFRAMEBUFFERTEXTUREPROC gglFramebufferTexture;
PFNGLVERTEXATTRIBDIVISORPROC gglVertexAttribDivisor;
PFNGLMINSAMPLESHADINGPROC gglMinSampleShading;
PFNGLBLENDEQUATIONIPROC gglBlendEquationi;
PFNGLBLENDEQUATIONSEPARATEIPROC gglBlendEquationSeparatei;
PFNGLBLENDFUNCIPROC gglBlendFunci;
PFNGLBLENDFUNCSEPARATEIPROC gglBlendFuncSeparatei;
PFNGLISRENDERBUFFERPROC gglIsRenderbuffer;
PFNGLBINDRENDERBUFFERPROC gglBindRenderbuffer;
PFNGLDELETERENDERBUFFERSPROC gglDeleteRenderbuffers;
PFNGLGENRENDERBUFFERSPROC gglGenRenderbuffers;
PFNGLRENDERBUFFERSTORAGEPROC gglRenderbufferStorage;
PFNGLGETRENDERBUFFERPARAMETERIVPROC gglGetRenderbufferParameteriv;
PFNGLISFRAMEBUFFERPROC gglIsFramebuffer;
PFNGLBINDFRAMEBUFFERPROC gglBindFramebuffer;
PFNGLDELETEFRAMEBUFFERSPROC gglDeleteFramebuffers;
PFNGLGENFRAMEBUFFERSPROC gglGenFramebuffers;
PFNGLCHECKFRAMEBUFFERSTATUSPROC gglCheckFramebufferStatus;
PFNGLFRAMEBUFFERTEXTURE1DPROC gglFramebufferTexture1D;
PFNGLFRAMEBUFFERTEXTURE2DPROC gglFramebufferTexture2D;
PFNGLFRAMEBUFFERTEXTURE3DPROC gglFramebufferTexture3D;
PFNGLFRAMEBUFFERRENDERBUFFERPROC gglFramebufferRenderbuffer;
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC gglGetFramebufferAttachmentParameteriv;
PFNGLGENERATEMIPMAPPROC gglGenerateMipmap;
PFNGLBLITFRAMEBUFFERPROC gglBlitFramebuffer;
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC gglRenderbufferStorageMultisample;
PFNGLFRAMEBUFFERTEXTURELAYERPROC gglFramebufferTextureLayer;
PFNGLMAPBUFFERRANGEPROC gglMapBufferRange;
PFNGLFLUSHMAPPEDBUFFERRANGEPROC gglFlushMappedBufferRange;
PFNGLBINDVERTEXARRAYPROC gglBindVertexArray;
PFNGLDELETEVERTEXARRAYSPROC gglDeleteVertexArrays;
PFNGLGENVERTEXARRAYSPROC gglGenVertexArrays;
PFNGLISVERTEXARRAYPROC gglIsVertexArray;
PFNGLGETUNIFORMINDICESPROC gglGetUniformIndices;
PFNGLGETACTIVEUNIFORMSIVPROC gglGetActiveUniformsiv;
PFNGLGETACTIVEUNIFORMNAMEPROC gglGetActiveUniformName;
PFNGLGETUNIFORMBLOCKINDEXPROC gglGetUniformBlockIndex;
PFNGLGETACTIVEUNIFORMBLOCKIVPROC gglGetActiveUniformBlockiv;
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC gglGetActiveUniformBlockName;
PFNGLUNIFORMBLOCKBINDINGPROC gglUniformBlockBinding;
PFNGLCOPYBUFFERSUBDATAPROC gglCopyBufferSubData;
PFNGLDRAWELEMENTSBASEVERTEXPROC gglDrawElementsBaseVertex;
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC gglDrawRangeElementsBaseVertex;
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC gglDrawElementsInstancedBaseVertex;
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC gglMultiDrawElementsBaseVertex;
PFNGLPROVOKINGVERTEXPROC gglProvokingVertex;
PFNGLFENCESYNCPROC gglFenceSync;
PFNGLISSYNCPROC gglIsSync;
PFNGLDELETESYNCPROC gglDeleteSync;
PFNGLCLIENTWAITSYNCPROC gglClientWaitSync;
PFNGLWAITSYNCPROC gglWaitSync;
PFNGLGETINTEGER64VPROC gglGetInteger64v;
PFNGLGETSYNCIVPROC gglGetSynciv;
PFNGLTEXIMAGE2DMULTISAMPLEPROC gglTexImage2DMultisample;
PFNGLTEXIMAGE3DMULTISAMPLEPROC gglTexImage3DMultisample;
PFNGLGETMULTISAMPLEFVPROC gglGetMultisamplefv;
PFNGLSAMPLEMASKIPROC gglSampleMaski;
PFNGLBLENDEQUATIONIARBPROC gglBlendEquationiARB;
PFNGLBLENDEQUATIONSEPARATEIARBPROC gglBlendEquationSeparateiARB;
PFNGLBLENDFUNCIARBPROC gglBlendFunciARB;
PFNGLBLENDFUNCSEPARATEIARBPROC gglBlendFuncSeparateiARB;
PFNGLMINSAMPLESHADINGARBPROC gglMinSampleShadingARB;
PFNGLNAMEDSTRINGARBPROC gglNamedStringARB;
PFNGLDELETENAMEDSTRINGARBPROC gglDeleteNamedStringARB;
PFNGLCOMPILESHADERINCLUDEARBPROC gglCompileShaderIncludeARB;
PFNGLISNAMEDSTRINGARBPROC gglIsNamedStringARB;
PFNGLGETNAMEDSTRINGARBPROC gglGetNamedStringARB;
PFNGLGETNAMEDSTRINGIVARBPROC gglGetNamedStringivARB;
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC gglBindFragDataLocationIndexed;
PFNGLGETFRAGDATAINDEXPROC gglGetFragDataIndex;
PFNGLGENSAMPLERSPROC gglGenSamplers;
PFNGLDELETESAMPLERSPROC gglDeleteSamplers;
PFNGLISSAMPLERPROC gglIsSampler;
PFNGLBINDSAMPLERPROC gglBindSampler;
PFNGLSAMPLERPARAMETERIPROC gglSamplerParameteri;
PFNGLSAMPLERPARAMETERIVPROC gglSamplerParameteriv;
PFNGLSAMPLERPARAMETERFPROC gglSamplerParameterf;
PFNGLSAMPLERPARAMETERFVPROC gglSamplerParameterfv;
PFNGLSAMPLERPARAMETERIIVPROC gglSamplerParameterIiv;
PFNGLSAMPLERPARAMETERIUIVPROC gglSamplerParameterIuiv;
PFNGLGETSAMPLERPARAMETERIVPROC gglGetSamplerParameteriv;
PFNGLGETSAMPLERPARAMETERIIVPROC gglGetSamplerParameterIiv;
PFNGLGETSAMPLERPARAMETERFVPROC gglGetSamplerParameterfv;
PFNGLGETSAMPLERPARAMETERIUIVPROC gglGetSamplerParameterIuiv;
PFNGLQUERYCOUNTERPROC gglQueryCounter;
PFNGLGETQUERYOBJECTI64VPROC gglGetQueryObjecti64v;
PFNGLGETQUERYOBJECTUI64VPROC gglGetQueryObjectui64v;
PFNGLVERTEXP2UIPROC gglVertexP2ui;
PFNGLVERTEXP2UIVPROC gglVertexP2uiv;
PFNGLVERTEXP3UIPROC gglVertexP3ui;
PFNGLVERTEXP3UIVPROC gglVertexP3uiv;
PFNGLVERTEXP4UIPROC gglVertexP4ui;
PFNGLVERTEXP4UIVPROC gglVertexP4uiv;
PFNGLTEXCOORDP1UIPROC gglTexCoordP1ui;
PFNGLTEXCOORDP1UIVPROC gglTexCoordP1uiv;
PFNGLTEXCOORDP2UIPROC gglTexCoordP2ui;
PFNGLTEXCOORDP2UIVPROC gglTexCoordP2uiv;
PFNGLTEXCOORDP3UIPROC gglTexCoordP3ui;
PFNGLTEXCOORDP3UIVPROC gglTexCoordP3uiv;
PFNGLTEXCOORDP4UIPROC gglTexCoordP4ui;
PFNGLTEXCOORDP4UIVPROC gglTexCoordP4uiv;
PFNGLMULTITEXCOORDP1UIPROC gglMultiTexCoordP1ui;
PFNGLMULTITEXCOORDP1UIVPROC gglMultiTexCoordP1uiv;
PFNGLMULTITEXCOORDP2UIPROC gglMultiTexCoordP2ui;
PFNGLMULTITEXCOORDP2UIVPROC gglMultiTexCoordP2uiv;
PFNGLMULTITEXCOORDP3UIPROC gglMultiTexCoordP3ui;
PFNGLMULTITEXCOORDP3UIVPROC gglMultiTexCoordP3uiv;
PFNGLMULTITEXCOORDP4UIPROC gglMultiTexCoordP4ui;
PFNGLMULTITEXCOORDP4UIVPROC gglMultiTexCoordP4uiv;
PFNGLNORMALP3UIPROC gglNormalP3ui;
PFNGLNORMALP3UIVPROC gglNormalP3uiv;
PFNGLCOLORP3UIPROC gglColorP3ui;
PFNGLCOLORP3UIVPROC gglColorP3uiv;
PFNGLCOLORP4UIPROC gglColorP4ui;
PFNGLCOLORP4UIVPROC gglColorP4uiv;
PFNGLSECONDARYCOLORP3UIPROC gglSecondaryColorP3ui;
PFNGLSECONDARYCOLORP3UIVPROC gglSecondaryColorP3uiv;
PFNGLVERTEXATTRIBP1UIPROC gglVertexAttribP1ui;
PFNGLVERTEXATTRIBP1UIVPROC gglVertexAttribP1uiv;
PFNGLVERTEXATTRIBP2UIPROC gglVertexAttribP2ui;
PFNGLVERTEXATTRIBP2UIVPROC gglVertexAttribP2uiv;
PFNGLVERTEXATTRIBP3UIPROC gglVertexAttribP3ui;
PFNGLVERTEXATTRIBP3UIVPROC gglVertexAttribP3uiv;
PFNGLVERTEXATTRIBP4UIPROC gglVertexAttribP4ui;
PFNGLVERTEXATTRIBP4UIVPROC gglVertexAttribP4uiv;
PFNGLDRAWARRAYSINDIRECTPROC gglDrawArraysIndirect;
PFNGLDRAWELEMENTSINDIRECTPROC gglDrawElementsIndirect;
PFNGLUNIFORM1DPROC gglUniform1d;
PFNGLUNIFORM2DPROC gglUniform2d;
PFNGLUNIFORM3DPROC gglUniform3d;
PFNGLUNIFORM4DPROC gglUniform4d;
PFNGLUNIFORM1DVPROC gglUniform1dv;
PFNGLUNIFORM2DVPROC gglUniform2dv;
PFNGLUNIFORM3DVPROC gglUniform3dv;
PFNGLUNIFORM4DVPROC gglUniform4dv;
PFNGLUNIFORMMATRIX2DVPROC gglUniformMatrix2dv;
PFNGLUNIFORMMATRIX3DVPROC gglUniformMatrix3dv;
PFNGLUNIFORMMATRIX4DVPROC gglUniformMatrix4dv;
PFNGLUNIFORMMATRIX2X3DVPROC gglUniformMatrix2x3dv;
PFNGLUNIFORMMATRIX2X4DVPROC gglUniformMatrix2x4dv;
PFNGLUNIFORMMATRIX3X2DVPROC gglUniformMatrix3x2dv;
PFNGLUNIFORMMATRIX3X4DVPROC gglUniformMatrix3x4dv;
PFNGLUNIFORMMATRIX4X2DVPROC gglUniformMatrix4x2dv;
PFNGLUNIFORMMATRIX4X3DVPROC gglUniformMatrix4x3dv;
PFNGLGETUNIFORMDVPROC gglGetUniformdv;
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC gglGetSubroutineUniformLocation;
PFNGLGETSUBROUTINEINDEXPROC gglGetSubroutineIndex;
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC gglGetActiveSubroutineUniformiv;
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC gglGetActiveSubroutineUniformName;
PFNGLGETACTIVESUBROUTINENAMEPROC gglGetActiveSubroutineName;
PFNGLUNIFORMSUBROUTINESUIVPROC gglUniformSubroutinesuiv;
PFNGLGETUNIFORMSUBROUTINEUIVPROC gglGetUniformSubroutineuiv;
PFNGLGETPROGRAMSTAGEIVPROC gglGetProgramStageiv;
PFNGLPATCHPARAMETERIPROC gglPatchParameteri;
PFNGLPATCHPARAMETERFVPROC gglPatchParameterfv;
PFNGLBINDTRANSFORMFEEDBACKPROC gglBindTransformFeedback;
PFNGLDELETETRANSFORMFEEDBACKSPROC gglDeleteTransformFeedbacks;
PFNGLGENTRANSFORMFEEDBACKSPROC gglGenTransformFeedbacks;
PFNGLISTRANSFORMFEEDBACKPROC gglIsTransformFeedback;
PFNGLPAUSETRANSFORMFEEDBACKPROC gglPauseTransformFeedback;
PFNGLRESUMETRANSFORMFEEDBACKPROC gglResumeTransformFeedback;
PFNGLDRAWTRANSFORMFEEDBACKPROC gglDrawTransformFeedback;
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC gglDrawTransformFeedbackStream;
PFNGLBEGINQUERYINDEXEDPROC gglBeginQueryIndexed;
PFNGLENDQUERYINDEXEDPROC gglEndQueryIndexed;
PFNGLGETQUERYINDEXEDIVPROC gglGetQueryIndexediv;
PFNGLRELEASESHADERCOMPILERPROC gglReleaseShaderCompiler;
PFNGLSHADERBINARYPROC gglShaderBinary;
PFNGLGETSHADERPRECISIONFORMATPROC gglGetShaderPrecisionFormat;
PFNGLDEPTHRANGEFPROC gglDepthRangef;
PFNGLCLEARDEPTHFPROC gglClearDepthf;
PFNGLGETPROGRAMBINARYPROC gglGetProgramBinary;
PFNGLPROGRAMBINARYPROC gglProgramBinary;
PFNGLPROGRAMPARAMETERIPROC gglProgramParameteri;
PFNGLUSEPROGRAMSTAGESPROC gglUseProgramStages;
PFNGLACTIVESHADERPROGRAMPROC gglActiveShaderProgram;
PFNGLCREATESHADERPROGRAMVPROC gglCreateShaderProgramv;
PFNGLBINDPROGRAMPIPELINEPROC gglBindProgramPipeline;
PFNGLDELETEPROGRAMPIPELINESPROC gglDeleteProgramPipelines;
PFNGLGENPROGRAMPIPELINESPROC gglGenProgramPipelines;
PFNGLISPROGRAMPIPELINEPROC gglIsProgramPipeline;
PFNGLGETPROGRAMPIPELINEIVPROC gglGetProgramPipelineiv;
PFNGLPROGRAMUNIFORM1IPROC gglProgramUniform1i;
PFNGLPROGRAMUNIFORM1IVPROC gglProgramUniform1iv;
PFNGLPROGRAMUNIFORM1FPROC gglProgramUniform1f;
PFNGLPROGRAMUNIFORM1FVPROC gglProgramUniform1fv;
PFNGLPROGRAMUNIFORM1DPROC gglProgramUniform1d;
PFNGLPROGRAMUNIFORM1DVPROC gglProgramUniform1dv;
PFNGLPROGRAMUNIFORM1UIPROC gglProgramUniform1ui;
PFNGLPROGRAMUNIFORM1UIVPROC gglProgramUniform1uiv;
PFNGLPROGRAMUNIFORM2IPROC gglProgramUniform2i;
PFNGLPROGRAMUNIFORM2IVPROC gglProgramUniform2iv;
PFNGLPROGRAMUNIFORM2FPROC gglProgramUniform2f;
PFNGLPROGRAMUNIFORM2FVPROC gglProgramUniform2fv;
PFNGLPROGRAMUNIFORM2DPROC gglProgramUniform2d;
PFNGLPROGRAMUNIFORM2DVPROC gglProgramUniform2dv;
PFNGLPROGRAMUNIFORM2UIPROC gglProgramUniform2ui;
PFNGLPROGRAMUNIFORM2UIVPROC gglProgramUniform2uiv;
PFNGLPROGRAMUNIFORM3IPROC gglProgramUniform3i;
PFNGLPROGRAMUNIFORM3IVPROC gglProgramUniform3iv;
PFNGLPROGRAMUNIFORM3FPROC gglProgramUniform3f;
PFNGLPROGRAMUNIFORM3FVPROC gglProgramUniform3fv;
PFNGLPROGRAMUNIFORM3DPROC gglProgramUniform3d;
PFNGLPROGRAMUNIFORM3DVPROC gglProgramUniform3dv;
PFNGLPROGRAMUNIFORM3UIPROC gglProgramUniform3ui;
PFNGLPROGRAMUNIFORM3UIVPROC gglProgramUniform3uiv;
PFNGLPROGRAMUNIFORM4IPROC gglProgramUniform4i;
PFNGLPROGRAMUNIFORM4IVPROC gglProgramUniform4iv;
PFNGLPROGRAMUNIFORM4FPROC gglProgramUniform4f;
PFNGLPROGRAMUNIFORM4FVPROC gglProgramUniform4fv;
PFNGLPROGRAMUNIFORM4DPROC gglProgramUniform4d;
PFNGLPROGRAMUNIFORM4DVPROC gglProgramUniform4dv;
PFNGLPROGRAMUNIFORM4UIPROC gglProgramUniform4ui;
PFNGLPROGRAMUNIFORM4UIVPROC gglProgramUniform4uiv;
PFNGLPROGRAMUNIFORMMATRIX2FVPROC gglProgramUniformMatrix2fv;
PFNGLPROGRAMUNIFORMMATRIX3FVPROC gglProgramUniformMatrix3fv;
PFNGLPROGRAMUNIFORMMATRIX4FVPROC gglProgramUniformMatrix4fv;
PFNGLPROGRAMUNIFORMMATRIX2DVPROC gglProgramUniformMatrix2dv;
PFNGLPROGRAMUNIFORMMATRIX3DVPROC gglProgramUniformMatrix3dv;
PFNGLPROGRAMUNIFORMMATRIX4DVPROC gglProgramUniformMatrix4dv;
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC gglProgramUniformMatrix2x3fv;
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC gglProgramUniformMatrix3x2fv;
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC gglProgramUniformMatrix2x4fv;
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC gglProgramUniformMatrix4x2fv;
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC gglProgramUniformMatrix3x4fv;
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC gglProgramUniformMatrix4x3fv;
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC gglProgramUniformMatrix2x3dv;
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC gglProgramUniformMatrix3x2dv;
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC gglProgramUniformMatrix2x4dv;
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC gglProgramUniformMatrix4x2dv;
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC gglProgramUniformMatrix3x4dv;
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC gglProgramUniformMatrix4x3dv;
PFNGLVALIDATEPROGRAMPIPELINEPROC gglValidateProgramPipeline;
PFNGLGETPROGRAMPIPELINEINFOLOGPROC gglGetProgramPipelineInfoLog;
PFNGLVERTEXATTRIBL1DPROC gglVertexAttribL1d;
PFNGLVERTEXATTRIBL2DPROC gglVertexAttribL2d;
PFNGLVERTEXATTRIBL3DPROC gglVertexAttribL3d;
PFNGLVERTEXATTRIBL4DPROC gglVertexAttribL4d;
PFNGLVERTEXATTRIBL1DVPROC gglVertexAttribL1dv;
PFNGLVERTEXATTRIBL2DVPROC gglVertexAttribL2dv;
PFNGLVERTEXATTRIBL3DVPROC gglVertexAttribL3dv;
PFNGLVERTEXATTRIBL4DVPROC gglVertexAttribL4dv;
PFNGLVERTEXATTRIBLPOINTERPROC gglVertexAttribLPointer;
PFNGLGETVERTEXATTRIBLDVPROC gglGetVertexAttribLdv;
PFNGLVIEWPORTARRAYVPROC gglViewportArrayv;
PFNGLVIEWPORTINDEXEDFPROC gglViewportIndexedf;
PFNGLVIEWPORTINDEXEDFVPROC gglViewportIndexedfv;
PFNGLSCISSORARRAYVPROC gglScissorArrayv;
PFNGLSCISSORINDEXEDPROC gglScissorIndexed;
PFNGLSCISSORINDEXEDVPROC gglScissorIndexedv;
PFNGLDEPTHRANGEARRAYVPROC gglDepthRangeArrayv;
PFNGLDEPTHRANGEINDEXEDPROC gglDepthRangeIndexed;
PFNGLGETFLOATI_VPROC gglGetFloati_v;
PFNGLGETDOUBLEI_VPROC gglGetDoublei_v;
PFNGLCREATESYNCFROMCLEVENTARBPROC gglCreateSyncFromCLeventARB;
PFNGLDEBUGMESSAGECONTROLARBPROC gglDebugMessageControlARB;
PFNGLDEBUGMESSAGEINSERTARBPROC gglDebugMessageInsertARB;
PFNGLDEBUGMESSAGECALLBACKARBPROC gglDebugMessageCallbackARB;
PFNGLGETDEBUGMESSAGELOGARBPROC gglGetDebugMessageLogARB;
PFNGLGETGRAPHICSRESETSTATUSARBPROC gglGetGraphicsResetStatusARB;
PFNGLGETNTEXIMAGEARBPROC gglGetnTexImageARB;
PFNGLREADNPIXELSARBPROC gglReadnPixelsARB;
PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC gglGetnCompressedTexImageARB;
PFNGLGETNUNIFORMFVARBPROC gglGetnUniformfvARB;
PFNGLGETNUNIFORMIVARBPROC gglGetnUniformivARB;
PFNGLGETNUNIFORMUIVARBPROC gglGetnUniformuivARB;
PFNGLGETNUNIFORMDVARBPROC gglGetnUniformdvARB;
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC gglDrawArraysInstancedBaseInstance;
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC gglDrawElementsInstancedBaseInstance;
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC gglDrawElementsInstancedBaseVertexBaseInstance;
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC gglDrawTransformFeedbackInstanced;
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC gglDrawTransformFeedbackStreamInstanced;
PFNGLGETINTERNALFORMATIVPROC gglGetInternalformativ;
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC gglGetActiveAtomicCounterBufferiv;
PFNGLBINDIMAGETEXTUREPROC gglBindImageTexture;
PFNGLMEMORYBARRIERPROC gglMemoryBarrier;
PFNGLTEXSTORAGE1DPROC gglTexStorage1D;
PFNGLTEXSTORAGE2DPROC gglTexStorage2D;
PFNGLTEXSTORAGE3DPROC gglTexStorage3D;
PFNGLTEXTURESTORAGE1DEXTPROC gglTextureStorage1DEXT;
PFNGLTEXTURESTORAGE2DEXTPROC gglTextureStorage2DEXT;
PFNGLTEXTURESTORAGE3DEXTPROC gglTextureStorage3DEXT;
PFNGLDEBUGMESSAGECONTROLPROC gglDebugMessageControl;
PFNGLDEBUGMESSAGEINSERTPROC gglDebugMessageInsert;
PFNGLDEBUGMESSAGECALLBACKPROC gglDebugMessageCallback;
PFNGLGETDEBUGMESSAGELOGPROC gglGetDebugMessageLog;
PFNGLPUSHDEBUGGROUPPROC gglPushDebugGroup;
PFNGLPOPDEBUGGROUPPROC gglPopDebugGroup;
PFNGLOBJECTLABELPROC gglObjectLabel;
PFNGLGETOBJECTLABELPROC gglGetObjectLabel;
PFNGLOBJECTPTRLABELPROC gglObjectPtrLabel;
PFNGLGETOBJECTPTRLABELPROC gglGetObjectPtrLabel;
PFNGLCLEARBUFFERDATAPROC gglClearBufferData;
PFNGLCLEARBUFFERSUBDATAPROC gglClearBufferSubData;
PFNGLCLEARNAMEDBUFFERDATAEXTPROC gglClearNamedBufferDataEXT;
PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC gglClearNamedBufferSubDataEXT;
PFNGLDISPATCHCOMPUTEPROC gglDispatchCompute;
PFNGLDISPATCHCOMPUTEINDIRECTPROC gglDispatchComputeIndirect;
PFNGLCOPYIMAGESUBDATAPROC gglCopyImageSubData;
PFNGLTEXTUREVIEWPROC gglTextureView;
PFNGLBINDVERTEXBUFFERPROC gglBindVertexBuffer;
PFNGLVERTEXATTRIBFORMATPROC gglVertexAttribFormat;
PFNGLVERTEXATTRIBIFORMATPROC gglVertexAttribIFormat;
PFNGLVERTEXATTRIBLFORMATPROC gglVertexAttribLFormat;
PFNGLVERTEXATTRIBBINDINGPROC gglVertexAttribBinding;
PFNGLVERTEXBINDINGDIVISORPROC gglVertexBindingDivisor;
PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC gglVertexArrayBindVertexBufferEXT;
PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC gglVertexArrayVertexAttribFormatEXT;
PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC gglVertexArrayVertexAttribIFormatEXT;
PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC gglVertexArrayVertexAttribLFormatEXT;
PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC gglVertexArrayVertexAttribBindingEXT;
PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC gglVertexArrayVertexBindingDivisorEXT;
PFNGLFRAMEBUFFERPARAMETERIPROC gglFramebufferParameteri;
PFNGLGETFRAMEBUFFERPARAMETERIVPROC gglGetFramebufferParameteriv;
PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC gglNamedFramebufferParameteriEXT;
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC gglGetNamedFramebufferParameterivEXT;
PFNGLGETINTERNALFORMATI64VPROC gglGetInternalformati64v;
PFNGLINVALIDATETEXSUBIMAGEPROC gglInvalidateTexSubImage;
PFNGLINVALIDATETEXIMAGEPROC gglInvalidateTexImage;
PFNGLINVALIDATEBUFFERSUBDATAPROC gglInvalidateBufferSubData;
PFNGLINVALIDATEBUFFERDATAPROC gglInvalidateBufferData;
PFNGLINVALIDATEFRAMEBUFFERPROC gglInvalidateFramebuffer;
PFNGLINVALIDATESUBFRAMEBUFFERPROC gglInvalidateSubFramebuffer;
PFNGLMULTIDRAWARRAYSINDIRECTPROC gglMultiDrawArraysIndirect;
PFNGLMULTIDRAWELEMENTSINDIRECTPROC gglMultiDrawElementsIndirect;
PFNGLGETPROGRAMINTERFACEIVPROC gglGetProgramInterfaceiv;
PFNGLGETPROGRAMRESOURCEINDEXPROC gglGetProgramResourceIndex;
PFNGLGETPROGRAMRESOURCENAMEPROC gglGetProgramResourceName;
PFNGLGETPROGRAMRESOURCEIVPROC gglGetProgramResourceiv;
PFNGLGETPROGRAMRESOURCELOCATIONPROC gglGetProgramResourceLocation;
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC gglGetProgramResourceLocationIndex;
PFNGLSHADERSTORAGEBLOCKBINDINGPROC gglShaderStorageBlockBinding;
PFNGLTEXBUFFERRANGEPROC gglTexBufferRange;
PFNGLTEXTUREBUFFERRANGEEXTPROC gglTextureBufferRangeEXT;
PFNGLTEXSTORAGE2DMULTISAMPLEPROC gglTexStorage2DMultisample;
PFNGLTEXSTORAGE3DMULTISAMPLEPROC gglTexStorage3DMultisample;
PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC gglTextureStorage2DMultisampleEXT;
PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC gglTextureStorage3DMultisampleEXT;
void checkOpenGLDL(){
#ifdef KRGUI_PLATFORM_WINDOWS
	if(!g_OpenGL_lib)
		g_OpenGL_lib = LoadLibrary(L"OpenGL32.dll");
#else
#error For Windows
#endif
}
namespace Kr
{
void loadOpenGLProcs()
{
	checkOpenGLDL();

#ifdef KRGUI_PLATFORM_WINDOWS
	gwglCreateContext = (wglCreateContext_t)getOpenGLProc("wglCreateContext");
	gwglMakeCurrent   = (wglMakeCurrent_t)getOpenGLProc("wglMakeCurrent");
	gwglGetProcAddress = (wglGetProcAddress_t)getOpenGLProc("wglGetProcAddress");
	gwglDeleteContext = (wglDeleteContext_t)getOpenGLProc("wglDeleteContext");
	gwglChoosePixelFormatARB = (wglChoosePixelFormatARB_t)gwglGetProcAddress("wglChoosePixelFormatARB");
	gwglCreateContextAttribsARB = (wglCreateContextAttribsARB_t)gwglGetProcAddress("wglCreateContextAttribsARB");
	gwglSwapIntervalEXT = (wglSwapIntervalEXT_t)gwglGetProcAddress("wglSwapIntervalEXT");
#endif

	gglCullFace = (PFNGLCULLFACEPROC) getOpenGLProc("glCullFace");
	gglFrontFace = (PFNGLFRONTFACEPROC) getOpenGLProc("glFrontFace");
	gglHint = (PFNGLHINTPROC) getOpenGLProc("glHint");
	gglLineWidth = (PFNGLLINEWIDTHPROC) getOpenGLProc("glLineWidth");
	gglPointSize = (PFNGLPOINTSIZEPROC) getOpenGLProc("glPointSize");
	gglPolygonMode = (PFNGLPOLYGONMODEPROC) getOpenGLProc("glPolygonMode");
	gglScissor = (PFNGLSCISSORPROC) getOpenGLProc("glScissor");
	gglTexParameterf = (PFNGLTEXPARAMETERFPROC) getOpenGLProc("glTexParameterf");
	gglTexParameterfv = (PFNGLTEXPARAMETERFVPROC) getOpenGLProc("glTexParameterfv");
	gglTexParameteri = (PFNGLTEXPARAMETERIPROC) getOpenGLProc("glTexParameteri");
	gglTexParameteriv = (PFNGLTEXPARAMETERIVPROC) getOpenGLProc("glTexParameteriv");
	gglTexImage1D = (PFNGLTEXIMAGE1DPROC) getOpenGLProc("glTexImage1D");
	gglTexImage2D = (PFNGLTEXIMAGE2DPROC) getOpenGLProc("glTexImage2D");
	gglDrawBuffer = (PFNGLDRAWBUFFERPROC) getOpenGLProc("glDrawBuffer");
	gglClear = (PFNGLCLEARPROC) getOpenGLProc("glClear");
	gglClearColor = (PFNGLCLEARCOLORPROC) getOpenGLProc("glClearColor");
	gglClearStencil = (PFNGLCLEARSTENCILPROC) getOpenGLProc("glClearStencil");
	gglClearDepth = (PFNGLCLEARDEPTHPROC) getOpenGLProc("glClearDepth");
	gglStencilMask = (PFNGLSTENCILMASKPROC) getOpenGLProc("glStencilMask");
	gglColorMask = (PFNGLCOLORMASKPROC) getOpenGLProc("glColorMask");
	gglDepthMask = (PFNGLDEPTHMASKPROC) getOpenGLProc("glDepthMask");
	gglDisable = (PFNGLDISABLEPROC) getOpenGLProc("glDisable");
	gglEnable = (PFNGLENABLEPROC) getOpenGLProc("glEnable");
	gglFinish = (PFNGLFINISHPROC) getOpenGLProc("glFinish");
	gglFlush = (PFNGLFLUSHPROC) getOpenGLProc("glFlush");
	gglBlendFunc = (PFNGLBLENDFUNCPROC) getOpenGLProc("glBlendFunc");
	gglLogicOp = (PFNGLLOGICOPPROC) getOpenGLProc("glLogicOp");
	gglStencilFunc = (PFNGLSTENCILFUNCPROC) getOpenGLProc("glStencilFunc");
	gglStencilOp = (PFNGLSTENCILOPPROC) getOpenGLProc("glStencilOp");
	gglDepthFunc = (PFNGLDEPTHFUNCPROC) getOpenGLProc("glDepthFunc");
	gglPixelStoref = (PFNGLPIXELSTOREFPROC) getOpenGLProc("glPixelStoref");
	gglPixelStorei = (PFNGLPIXELSTOREIPROC) getOpenGLProc("glPixelStorei");
	gglReadBuffer = (PFNGLREADBUFFERPROC) getOpenGLProc("glReadBuffer");
	gglReadPixels = (PFNGLREADPIXELSPROC) getOpenGLProc("glReadPixels");
	gglGetBooleanv = (PFNGLGETBOOLEANVPROC) getOpenGLProc("glGetBooleanv");
	gglGetDoublev = (PFNGLGETDOUBLEVPROC) getOpenGLProc("glGetDoublev");
	gglGetError = (PFNGLGETERRORPROC) getOpenGLProc("glGetError");
	gglGetFloatv = (PFNGLGETFLOATVPROC) getOpenGLProc("glGetFloatv");
	gglGetIntegerv = (PFNGLGETINTEGERVPROC) getOpenGLProc("glGetIntegerv");
	gglGetString = (PFNGLGETSTRINGPROC) getOpenGLProc("glGetString");
	gglGetTexImage = (PFNGLGETTEXIMAGEPROC) getOpenGLProc("glGetTexImage");
	gglGetTexParameterfv = (PFNGLGETTEXPARAMETERFVPROC) getOpenGLProc("glGetTexParameterfv");
	gglGetTexParameteriv = (PFNGLGETTEXPARAMETERIVPROC) getOpenGLProc("glGetTexParameteriv");
	gglGetTexLevelParameterfv = (PFNGLGETTEXLEVELPARAMETERFVPROC) getOpenGLProc("glGetTexLevelParameterfv");
	gglGetTexLevelParameteriv = (PFNGLGETTEXLEVELPARAMETERIVPROC) getOpenGLProc("glGetTexLevelParameteriv");
	gglIsEnabled = (PFNGLISENABLEDPROC) getOpenGLProc("glIsEnabled");
	gglDepthRange = (PFNGLDEPTHRANGEPROC) getOpenGLProc("glDepthRange");
	gglViewport = (PFNGLVIEWPORTPROC) getOpenGLProc("glViewport");
	gglDrawArrays = (PFNGLDRAWARRAYSPROC) getOpenGLProc("glDrawArrays");
	gglDrawElements = (PFNGLDRAWELEMENTSPROC) getOpenGLProc("glDrawElements");
	gglGetPointerv = (PFNGLGETPOINTERVPROC) getOpenGLProc("glGetPointerv");
	gglPolygonOffset = (PFNGLPOLYGONOFFSETPROC) getOpenGLProc("glPolygonOffset");
	gglCopyTexImage1D = (PFNGLCOPYTEXIMAGE1DPROC) getOpenGLProc("glCopyTexImage1D");
	gglCopyTexImage2D = (PFNGLCOPYTEXIMAGE2DPROC) getOpenGLProc("glCopyTexImage2D");
	gglCopyTexSubImage1D = (PFNGLCOPYTEXSUBIMAGE1DPROC) getOpenGLProc("glCopyTexSubImage1D");
	gglCopyTexSubImage2D = (PFNGLCOPYTEXSUBIMAGE2DPROC) getOpenGLProc("glCopyTexSubImage2D");
	gglTexSubImage1D = (PFNGLTEXSUBIMAGE1DPROC) getOpenGLProc("glTexSubImage1D");
	gglTexSubImage2D = (PFNGLTEXSUBIMAGE2DPROC) getOpenGLProc("glTexSubImage2D");
	gglBindTexture = (PFNGLBINDTEXTUREPROC) getOpenGLProc("glBindTexture");
	gglDeleteTextures = (PFNGLDELETETEXTURESPROC) getOpenGLProc("glDeleteTextures");
	gglGenTextures = (PFNGLGENTEXTURESPROC) getOpenGLProc("glGenTextures");
	gglIsTexture = (PFNGLISTEXTUREPROC) getOpenGLProc("glIsTexture");
	gglBlendColor = (PFNGLBLENDCOLORPROC) getOpenGLProc("glBlendColor");
	gglBlendEquation = (PFNGLBLENDEQUATIONPROC) getOpenGLProc("glBlendEquation");
	gglDrawRangeElements = (PFNGLDRAWRANGEELEMENTSPROC) getOpenGLProc("glDrawRangeElements");
	gglTexImage3D = (PFNGLTEXIMAGE3DPROC) getOpenGLProc("glTexImage3D");
	gglTexSubImage3D = (PFNGLTEXSUBIMAGE3DPROC) getOpenGLProc("glTexSubImage3D");
	gglCopyTexSubImage3D = (PFNGLCOPYTEXSUBIMAGE3DPROC) getOpenGLProc("glCopyTexSubImage3D");
	gglActiveTexture = (PFNGLACTIVETEXTUREPROC) getOpenGLProc("glActiveTexture");
	gglSampleCoverage = (PFNGLSAMPLECOVERAGEPROC) getOpenGLProc("glSampleCoverage");
	gglCompressedTexImage3D = (PFNGLCOMPRESSEDTEXIMAGE3DPROC) getOpenGLProc("glCompressedTexImage3D");
	gglCompressedTexImage2D = (PFNGLCOMPRESSEDTEXIMAGE2DPROC) getOpenGLProc("glCompressedTexImage2D");
	gglCompressedTexImage1D = (PFNGLCOMPRESSEDTEXIMAGE1DPROC) getOpenGLProc("glCompressedTexImage1D");
	gglCompressedTexSubImage3D = (PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) getOpenGLProc("glCompressedTexSubImage3D");
	gglCompressedTexSubImage2D = (PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) getOpenGLProc("glCompressedTexSubImage2D");
	gglCompressedTexSubImage1D = (PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) getOpenGLProc("glCompressedTexSubImage1D");
	gglGetCompressedTexImage = (PFNGLGETCOMPRESSEDTEXIMAGEPROC) getOpenGLProc("glGetCompressedTexImage");
	gglBlendFuncSeparate = (PFNGLBLENDFUNCSEPARATEPROC) getOpenGLProc("glBlendFuncSeparate");
	gglMultiDrawArrays = (PFNGLMULTIDRAWARRAYSPROC) getOpenGLProc("glMultiDrawArrays");
	gglMultiDrawElements = (PFNGLMULTIDRAWELEMENTSPROC) getOpenGLProc("glMultiDrawElements");
	gglPointParameterf = (PFNGLPOINTPARAMETERFPROC) getOpenGLProc("glPointParameterf");
	gglPointParameterfv = (PFNGLPOINTPARAMETERFVPROC) getOpenGLProc("glPointParameterfv");
	gglPointParameteri = (PFNGLPOINTPARAMETERIPROC) getOpenGLProc("glPointParameteri");
	gglPointParameteriv = (PFNGLPOINTPARAMETERIVPROC) getOpenGLProc("glPointParameteriv");
	gglGenQueries = (PFNGLGENQUERIESPROC) getOpenGLProc("glGenQueries");
	gglDeleteQueries = (PFNGLDELETEQUERIESPROC) getOpenGLProc("glDeleteQueries");
	gglIsQuery = (PFNGLISQUERYPROC) getOpenGLProc("glIsQuery");
	gglBeginQuery = (PFNGLBEGINQUERYPROC) getOpenGLProc("glBeginQuery");
	gglEndQuery = (PFNGLENDQUERYPROC) getOpenGLProc("glEndQuery");
	gglGetQueryiv = (PFNGLGETQUERYIVPROC) getOpenGLProc("glGetQueryiv");
	gglGetQueryObjectiv = (PFNGLGETQUERYOBJECTIVPROC) getOpenGLProc("glGetQueryObjectiv");
	gglGetQueryObjectuiv = (PFNGLGETQUERYOBJECTUIVPROC) getOpenGLProc("glGetQueryObjectuiv");
	gglBindBuffer = (PFNGLBINDBUFFERPROC) getOpenGLProc("glBindBuffer");
	gglDeleteBuffers = (PFNGLDELETEBUFFERSPROC) getOpenGLProc("glDeleteBuffers");
	gglGenBuffers = (PFNGLGENBUFFERSPROC) getOpenGLProc("glGenBuffers");
	gglIsBuffer = (PFNGLISBUFFERPROC) getOpenGLProc("glIsBuffer");
	gglBufferData = (PFNGLBUFFERDATAPROC) getOpenGLProc("glBufferData");
	gglBufferSubData = (PFNGLBUFFERSUBDATAPROC) getOpenGLProc("glBufferSubData");
	gglGetBufferSubData = (PFNGLGETBUFFERSUBDATAPROC) getOpenGLProc("glGetBufferSubData");
	gglMapBuffer = (PFNGLMAPBUFFERPROC) getOpenGLProc("glMapBuffer");
	gglUnmapBuffer = (PFNGLUNMAPBUFFERPROC) getOpenGLProc("glUnmapBuffer");
	gglGetBufferParameteriv = (PFNGLGETBUFFERPARAMETERIVPROC) getOpenGLProc("glGetBufferParameteriv");
	gglGetBufferPointerv = (PFNGLGETBUFFERPOINTERVPROC) getOpenGLProc("glGetBufferPointerv");
	gglBlendEquationSeparate = (PFNGLBLENDEQUATIONSEPARATEPROC) getOpenGLProc("glBlendEquationSeparate");
	gglDrawBuffers = (PFNGLDRAWBUFFERSPROC) getOpenGLProc("glDrawBuffers");
	gglStencilOpSeparate = (PFNGLSTENCILOPSEPARATEPROC) getOpenGLProc("glStencilOpSeparate");
	gglStencilFuncSeparate = (PFNGLSTENCILFUNCSEPARATEPROC) getOpenGLProc("glStencilFuncSeparate");
	gglStencilMaskSeparate = (PFNGLSTENCILMASKSEPARATEPROC) getOpenGLProc("glStencilMaskSeparate");
	gglAttachShader = (PFNGLATTACHSHADERPROC) getOpenGLProc("glAttachShader");
	gglBindAttribLocation = (PFNGLBINDATTRIBLOCATIONPROC) getOpenGLProc("glBindAttribLocation");
	gglCompileShader = (PFNGLCOMPILESHADERPROC) getOpenGLProc("glCompileShader");
	gglCreateProgram = (PFNGLCREATEPROGRAMPROC) getOpenGLProc("glCreateProgram");
	gglCreateShader = (PFNGLCREATESHADERPROC) getOpenGLProc("glCreateShader");
	gglDeleteProgram = (PFNGLDELETEPROGRAMPROC) getOpenGLProc("glDeleteProgram");
	gglDeleteShader = (PFNGLDELETESHADERPROC) getOpenGLProc("glDeleteShader");
	gglDetachShader = (PFNGLDETACHSHADERPROC) getOpenGLProc("glDetachShader");
	gglDisableVertexAttribArray = (PFNGLDISABLEVERTEXATTRIBARRAYPROC) getOpenGLProc("glDisableVertexAttribArray");
	gglEnableVertexAttribArray = (PFNGLENABLEVERTEXATTRIBARRAYPROC) getOpenGLProc("glEnableVertexAttribArray");
	gglGetActiveAttrib = (PFNGLGETACTIVEATTRIBPROC) getOpenGLProc("glGetActiveAttrib");
	gglGetActiveUniform = (PFNGLGETACTIVEUNIFORMPROC) getOpenGLProc("glGetActiveUniform");
	gglGetAttachedShaders = (PFNGLGETATTACHEDSHADERSPROC) getOpenGLProc("glGetAttachedShaders");
	gglGetAttribLocation = (PFNGLGETATTRIBLOCATIONPROC) getOpenGLProc("glGetAttribLocation");
	gglGetProgramiv = (PFNGLGETPROGRAMIVPROC) getOpenGLProc("glGetProgramiv");
	gglGetProgramInfoLog = (PFNGLGETPROGRAMINFOLOGPROC) getOpenGLProc("glGetProgramInfoLog");
	gglGetShaderiv = (PFNGLGETSHADERIVPROC) getOpenGLProc("glGetShaderiv");
	gglGetShaderInfoLog = (PFNGLGETSHADERINFOLOGPROC) getOpenGLProc("glGetShaderInfoLog");
	gglGetShaderSource = (PFNGLGETSHADERSOURCEPROC) getOpenGLProc("glGetShaderSource");
	gglGetUniformLocation = (PFNGLGETUNIFORMLOCATIONPROC) getOpenGLProc("glGetUniformLocation");
	gglGetUniformfv = (PFNGLGETUNIFORMFVPROC) getOpenGLProc("glGetUniformfv");
	gglGetUniformiv = (PFNGLGETUNIFORMIVPROC) getOpenGLProc("glGetUniformiv");
	gglGetVertexAttribdv = (PFNGLGETVERTEXATTRIBDVPROC) getOpenGLProc("glGetVertexAttribdv");
	gglGetVertexAttribfv = (PFNGLGETVERTEXATTRIBFVPROC) getOpenGLProc("glGetVertexAttribfv");
	gglGetVertexAttribiv = (PFNGLGETVERTEXATTRIBIVPROC) getOpenGLProc("glGetVertexAttribiv");
	gglGetVertexAttribPointerv = (PFNGLGETVERTEXATTRIBPOINTERVPROC) getOpenGLProc("glGetVertexAttribPointerv");
	gglIsProgram = (PFNGLISPROGRAMPROC) getOpenGLProc("glIsProgram");
	gglIsShader = (PFNGLISSHADERPROC) getOpenGLProc("glIsShader");
	gglLinkProgram = (PFNGLLINKPROGRAMPROC) getOpenGLProc("glLinkProgram");
	gglShaderSource = (PFNGLSHADERSOURCEPROC) getOpenGLProc("glShaderSource");
	gglUseProgram = (PFNGLUSEPROGRAMPROC) getOpenGLProc("glUseProgram");
	gglUniform1f = (PFNGLUNIFORM1FPROC) getOpenGLProc("glUniform1f");
	gglUniform2f = (PFNGLUNIFORM2FPROC) getOpenGLProc("glUniform2f");
	gglUniform3f = (PFNGLUNIFORM3FPROC) getOpenGLProc("glUniform3f");
	gglUniform4f = (PFNGLUNIFORM4FPROC) getOpenGLProc("glUniform4f");
	gglUniform1i = (PFNGLUNIFORM1IPROC) getOpenGLProc("glUniform1i");
	gglUniform2i = (PFNGLUNIFORM2IPROC) getOpenGLProc("glUniform2i");
	gglUniform3i = (PFNGLUNIFORM3IPROC) getOpenGLProc("glUniform3i");
	gglUniform4i = (PFNGLUNIFORM4IPROC) getOpenGLProc("glUniform4i");
	gglUniform1fv = (PFNGLUNIFORM1FVPROC) getOpenGLProc("glUniform1fv");
	gglUniform2fv = (PFNGLUNIFORM2FVPROC) getOpenGLProc("glUniform2fv");
	gglUniform3fv = (PFNGLUNIFORM3FVPROC) getOpenGLProc("glUniform3fv");
	gglUniform4fv = (PFNGLUNIFORM4FVPROC) getOpenGLProc("glUniform4fv");
	gglUniform1iv = (PFNGLUNIFORM1IVPROC) getOpenGLProc("glUniform1iv");
	gglUniform2iv = (PFNGLUNIFORM2IVPROC) getOpenGLProc("glUniform2iv");
	gglUniform3iv = (PFNGLUNIFORM3IVPROC) getOpenGLProc("glUniform3iv");
	gglUniform4iv = (PFNGLUNIFORM4IVPROC) getOpenGLProc("glUniform4iv");
	gglUniformMatrix2fv = (PFNGLUNIFORMMATRIX2FVPROC) getOpenGLProc("glUniformMatrix2fv");
	gglUniformMatrix3fv = (PFNGLUNIFORMMATRIX3FVPROC) getOpenGLProc("glUniformMatrix3fv");
	gglUniformMatrix4fv = (PFNGLUNIFORMMATRIX4FVPROC) getOpenGLProc("glUniformMatrix4fv");
	gglValidateProgram = (PFNGLVALIDATEPROGRAMPROC) getOpenGLProc("glValidateProgram");
	gglVertexAttrib1d = (PFNGLVERTEXATTRIB1DPROC) getOpenGLProc("glVertexAttrib1d");
	gglVertexAttrib1dv = (PFNGLVERTEXATTRIB1DVPROC) getOpenGLProc("glVertexAttrib1dv");
	gglVertexAttrib1f = (PFNGLVERTEXATTRIB1FPROC) getOpenGLProc("glVertexAttrib1f");
	gglVertexAttrib1fv = (PFNGLVERTEXATTRIB1FVPROC) getOpenGLProc("glVertexAttrib1fv");
	gglVertexAttrib1s = (PFNGLVERTEXATTRIB1SPROC) getOpenGLProc("glVertexAttrib1s");
	gglVertexAttrib1sv = (PFNGLVERTEXATTRIB1SVPROC) getOpenGLProc("glVertexAttrib1sv");
	gglVertexAttrib2d = (PFNGLVERTEXATTRIB2DPROC) getOpenGLProc("glVertexAttrib2d");
	gglVertexAttrib2dv = (PFNGLVERTEXATTRIB2DVPROC) getOpenGLProc("glVertexAttrib2dv");
	gglVertexAttrib2f = (PFNGLVERTEXATTRIB2FPROC) getOpenGLProc("glVertexAttrib2f");
	gglVertexAttrib2fv = (PFNGLVERTEXATTRIB2FVPROC) getOpenGLProc("glVertexAttrib2fv");
	gglVertexAttrib2s = (PFNGLVERTEXATTRIB2SPROC) getOpenGLProc("glVertexAttrib2s");
	gglVertexAttrib2sv = (PFNGLVERTEXATTRIB2SVPROC) getOpenGLProc("glVertexAttrib2sv");
	gglVertexAttrib3d = (PFNGLVERTEXATTRIB3DPROC) getOpenGLProc("glVertexAttrib3d");
	gglVertexAttrib3dv = (PFNGLVERTEXATTRIB3DVPROC) getOpenGLProc("glVertexAttrib3dv");
	gglVertexAttrib3f = (PFNGLVERTEXATTRIB3FPROC) getOpenGLProc("glVertexAttrib3f");
	gglVertexAttrib3fv = (PFNGLVERTEXATTRIB3FVPROC) getOpenGLProc("glVertexAttrib3fv");
	gglVertexAttrib3s = (PFNGLVERTEXATTRIB3SPROC) getOpenGLProc("glVertexAttrib3s");
	gglVertexAttrib3sv = (PFNGLVERTEXATTRIB3SVPROC) getOpenGLProc("glVertexAttrib3sv");
	gglVertexAttrib4Nbv = (PFNGLVERTEXATTRIB4NBVPROC) getOpenGLProc("glVertexAttrib4Nbv");
	gglVertexAttrib4Niv = (PFNGLVERTEXATTRIB4NIVPROC) getOpenGLProc("glVertexAttrib4Niv");
	gglVertexAttrib4Nsv = (PFNGLVERTEXATTRIB4NSVPROC) getOpenGLProc("glVertexAttrib4Nsv");
	gglVertexAttrib4Nub = (PFNGLVERTEXATTRIB4NUBPROC) getOpenGLProc("glVertexAttrib4Nub");
	gglVertexAttrib4Nubv = (PFNGLVERTEXATTRIB4NUBVPROC) getOpenGLProc("glVertexAttrib4Nubv");
	gglVertexAttrib4Nuiv = (PFNGLVERTEXATTRIB4NUIVPROC) getOpenGLProc("glVertexAttrib4Nuiv");
	gglVertexAttrib4Nusv = (PFNGLVERTEXATTRIB4NUSVPROC) getOpenGLProc("glVertexAttrib4Nusv");
	gglVertexAttrib4bv = (PFNGLVERTEXATTRIB4BVPROC) getOpenGLProc("glVertexAttrib4bv");
	gglVertexAttrib4d = (PFNGLVERTEXATTRIB4DPROC) getOpenGLProc("glVertexAttrib4d");
	gglVertexAttrib4dv = (PFNGLVERTEXATTRIB4DVPROC) getOpenGLProc("glVertexAttrib4dv");
	gglVertexAttrib4f = (PFNGLVERTEXATTRIB4FPROC) getOpenGLProc("glVertexAttrib4f");
	gglVertexAttrib4fv = (PFNGLVERTEXATTRIB4FVPROC) getOpenGLProc("glVertexAttrib4fv");
	gglVertexAttrib4iv = (PFNGLVERTEXATTRIB4IVPROC) getOpenGLProc("glVertexAttrib4iv");
	gglVertexAttrib4s = (PFNGLVERTEXATTRIB4SPROC) getOpenGLProc("glVertexAttrib4s");
	gglVertexAttrib4sv = (PFNGLVERTEXATTRIB4SVPROC) getOpenGLProc("glVertexAttrib4sv");
	gglVertexAttrib4ubv = (PFNGLVERTEXATTRIB4UBVPROC) getOpenGLProc("glVertexAttrib4ubv");
	gglVertexAttrib4uiv = (PFNGLVERTEXATTRIB4UIVPROC) getOpenGLProc("glVertexAttrib4uiv");
	gglVertexAttrib4usv = (PFNGLVERTEXATTRIB4USVPROC) getOpenGLProc("glVertexAttrib4usv");
	gglVertexAttribPointer = (PFNGLVERTEXATTRIBPOINTERPROC) getOpenGLProc("glVertexAttribPointer");
	gglUniformMatrix2x3fv = (PFNGLUNIFORMMATRIX2X3FVPROC) getOpenGLProc("glUniformMatrix2x3fv");
	gglUniformMatrix3x2fv = (PFNGLUNIFORMMATRIX3X2FVPROC) getOpenGLProc("glUniformMatrix3x2fv");
	gglUniformMatrix2x4fv = (PFNGLUNIFORMMATRIX2X4FVPROC) getOpenGLProc("glUniformMatrix2x4fv");
	gglUniformMatrix4x2fv = (PFNGLUNIFORMMATRIX4X2FVPROC) getOpenGLProc("glUniformMatrix4x2fv");
	gglUniformMatrix3x4fv = (PFNGLUNIFORMMATRIX3X4FVPROC) getOpenGLProc("glUniformMatrix3x4fv");
	gglUniformMatrix4x3fv = (PFNGLUNIFORMMATRIX4X3FVPROC) getOpenGLProc("glUniformMatrix4x3fv");
	gglColorMaski = (PFNGLCOLORMASKIPROC) getOpenGLProc("glColorMaski");
	gglGetBooleani_v = (PFNGLGETBOOLEANI_VPROC) getOpenGLProc("glGetBooleani_v");
	gglGetIntegeri_v = (PFNGLGETINTEGERI_VPROC) getOpenGLProc("glGetIntegeri_v");
	gglEnablei = (PFNGLENABLEIPROC) getOpenGLProc("glEnablei");
	gglDisablei = (PFNGLDISABLEIPROC) getOpenGLProc("glDisablei");
	gglIsEnabledi = (PFNGLISENABLEDIPROC) getOpenGLProc("glIsEnabledi");
	gglBeginTransformFeedback = (PFNGLBEGINTRANSFORMFEEDBACKPROC) getOpenGLProc("glBeginTransformFeedback");
	gglEndTransformFeedback = (PFNGLENDTRANSFORMFEEDBACKPROC) getOpenGLProc("glEndTransformFeedback");
	gglBindBufferRange = (PFNGLBINDBUFFERRANGEPROC) getOpenGLProc("glBindBufferRange");
	gglBindBufferBase = (PFNGLBINDBUFFERBASEPROC) getOpenGLProc("glBindBufferBase");
	gglTransformFeedbackVaryings = (PFNGLTRANSFORMFEEDBACKVARYINGSPROC) getOpenGLProc("glTransformFeedbackVaryings");
	gglGetTransformFeedbackVarying = (PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) getOpenGLProc("glGetTransformFeedbackVarying");
	gglClampColor = (PFNGLCLAMPCOLORPROC) getOpenGLProc("glClampColor");
	gglBeginConditionalRender = (PFNGLBEGINCONDITIONALRENDERPROC) getOpenGLProc("glBeginConditionalRender");
	gglEndConditionalRender = (PFNGLENDCONDITIONALRENDERPROC) getOpenGLProc("glEndConditionalRender");
	gglVertexAttribIPointer = (PFNGLVERTEXATTRIBIPOINTERPROC) getOpenGLProc("glVertexAttribIPointer");
	gglGetVertexAttribIiv = (PFNGLGETVERTEXATTRIBIIVPROC) getOpenGLProc("glGetVertexAttribIiv");
	gglGetVertexAttribIuiv = (PFNGLGETVERTEXATTRIBIUIVPROC) getOpenGLProc("glGetVertexAttribIuiv");
	gglVertexAttribI1i = (PFNGLVERTEXATTRIBI1IPROC) getOpenGLProc("glVertexAttribI1i");
	gglVertexAttribI2i = (PFNGLVERTEXATTRIBI2IPROC) getOpenGLProc("glVertexAttribI2i");
	gglVertexAttribI3i = (PFNGLVERTEXATTRIBI3IPROC) getOpenGLProc("glVertexAttribI3i");
	gglVertexAttribI4i = (PFNGLVERTEXATTRIBI4IPROC) getOpenGLProc("glVertexAttribI4i");
	gglVertexAttribI1ui = (PFNGLVERTEXATTRIBI1UIPROC) getOpenGLProc("glVertexAttribI1ui");
	gglVertexAttribI2ui = (PFNGLVERTEXATTRIBI2UIPROC) getOpenGLProc("glVertexAttribI2ui");
	gglVertexAttribI3ui = (PFNGLVERTEXATTRIBI3UIPROC) getOpenGLProc("glVertexAttribI3ui");
	gglVertexAttribI4ui = (PFNGLVERTEXATTRIBI4UIPROC) getOpenGLProc("glVertexAttribI4ui");
	gglVertexAttribI1iv = (PFNGLVERTEXATTRIBI1IVPROC) getOpenGLProc("glVertexAttribI1iv");
	gglVertexAttribI2iv = (PFNGLVERTEXATTRIBI2IVPROC) getOpenGLProc("glVertexAttribI2iv");
	gglVertexAttribI3iv = (PFNGLVERTEXATTRIBI3IVPROC) getOpenGLProc("glVertexAttribI3iv");
	gglVertexAttribI4iv = (PFNGLVERTEXATTRIBI4IVPROC) getOpenGLProc("glVertexAttribI4iv");
	gglVertexAttribI1uiv = (PFNGLVERTEXATTRIBI1UIVPROC) getOpenGLProc("glVertexAttribI1uiv");
	gglVertexAttribI2uiv = (PFNGLVERTEXATTRIBI2UIVPROC) getOpenGLProc("glVertexAttribI2uiv");
	gglVertexAttribI3uiv = (PFNGLVERTEXATTRIBI3UIVPROC) getOpenGLProc("glVertexAttribI3uiv");
	gglVertexAttribI4uiv = (PFNGLVERTEXATTRIBI4UIVPROC) getOpenGLProc("glVertexAttribI4uiv");
	gglVertexAttribI4bv = (PFNGLVERTEXATTRIBI4BVPROC) getOpenGLProc("glVertexAttribI4bv");
	gglVertexAttribI4sv = (PFNGLVERTEXATTRIBI4SVPROC) getOpenGLProc("glVertexAttribI4sv");
	gglVertexAttribI4ubv = (PFNGLVERTEXATTRIBI4UBVPROC) getOpenGLProc("glVertexAttribI4ubv");
	gglVertexAttribI4usv = (PFNGLVERTEXATTRIBI4USVPROC) getOpenGLProc("glVertexAttribI4usv");
	gglGetUniformuiv = (PFNGLGETUNIFORMUIVPROC) getOpenGLProc("glGetUniformuiv");
	gglBindFragDataLocation = (PFNGLBINDFRAGDATALOCATIONPROC) getOpenGLProc("glBindFragDataLocation");
	gglGetFragDataLocation = (PFNGLGETFRAGDATALOCATIONPROC) getOpenGLProc("glGetFragDataLocation");
	gglUniform1ui = (PFNGLUNIFORM1UIPROC) getOpenGLProc("glUniform1ui");
	gglUniform2ui = (PFNGLUNIFORM2UIPROC) getOpenGLProc("glUniform2ui");
	gglUniform3ui = (PFNGLUNIFORM3UIPROC) getOpenGLProc("glUniform3ui");
	gglUniform4ui = (PFNGLUNIFORM4UIPROC) getOpenGLProc("glUniform4ui");
	gglUniform1uiv = (PFNGLUNIFORM1UIVPROC) getOpenGLProc("glUniform1uiv");
	gglUniform2uiv = (PFNGLUNIFORM2UIVPROC) getOpenGLProc("glUniform2uiv");
	gglUniform3uiv = (PFNGLUNIFORM3UIVPROC) getOpenGLProc("glUniform3uiv");
	gglUniform4uiv = (PFNGLUNIFORM4UIVPROC) getOpenGLProc("glUniform4uiv");
	gglTexParameterIiv = (PFNGLTEXPARAMETERIIVPROC) getOpenGLProc("glTexParameterIiv");
	gglTexParameterIuiv = (PFNGLTEXPARAMETERIUIVPROC) getOpenGLProc("glTexParameterIuiv");
	gglGetTexParameterIiv = (PFNGLGETTEXPARAMETERIIVPROC) getOpenGLProc("glGetTexParameterIiv");
	gglGetTexParameterIuiv = (PFNGLGETTEXPARAMETERIUIVPROC) getOpenGLProc("glGetTexParameterIuiv");
	gglClearBufferiv = (PFNGLCLEARBUFFERIVPROC) getOpenGLProc("glClearBufferiv");
	gglClearBufferuiv = (PFNGLCLEARBUFFERUIVPROC) getOpenGLProc("glClearBufferuiv");
	gglClearBufferfv = (PFNGLCLEARBUFFERFVPROC) getOpenGLProc("glClearBufferfv");
	gglClearBufferfi = (PFNGLCLEARBUFFERFIPROC) getOpenGLProc("glClearBufferfi");
	gglGetStringi = (PFNGLGETSTRINGIPROC) getOpenGLProc("glGetStringi");
	gglDrawArraysInstanced = (PFNGLDRAWARRAYSINSTANCEDPROC) getOpenGLProc("glDrawArraysInstanced");
	gglDrawElementsInstanced = (PFNGLDRAWELEMENTSINSTANCEDPROC) getOpenGLProc("glDrawElementsInstanced");
	gglTexBuffer = (PFNGLTEXBUFFERPROC) getOpenGLProc("glTexBuffer");
	gglPrimitiveRestartIndex = (PFNGLPRIMITIVERESTARTINDEXPROC) getOpenGLProc("glPrimitiveRestartIndex");
	gglGetInteger64i_v = (PFNGLGETINTEGER64I_VPROC) getOpenGLProc("glGetInteger64i_v");
	gglGetBufferParameteri64v = (PFNGLGETBUFFERPARAMETERI64VPROC) getOpenGLProc("glGetBufferParameteri64v");
	gglFramebufferTexture = (PFNGLFRAMEBUFFERTEXTUREPROC) getOpenGLProc("glFramebufferTexture");
	gglVertexAttribDivisor = (PFNGLVERTEXATTRIBDIVISORPROC) getOpenGLProc("glVertexAttribDivisor");
	gglMinSampleShading = (PFNGLMINSAMPLESHADINGPROC) getOpenGLProc("glMinSampleShading");
	gglBlendEquationi = (PFNGLBLENDEQUATIONIPROC) getOpenGLProc("glBlendEquationi");
	gglBlendEquationSeparatei = (PFNGLBLENDEQUATIONSEPARATEIPROC) getOpenGLProc("glBlendEquationSeparatei");
	gglBlendFunci = (PFNGLBLENDFUNCIPROC) getOpenGLProc("glBlendFunci");
	gglBlendFuncSeparatei = (PFNGLBLENDFUNCSEPARATEIPROC) getOpenGLProc("glBlendFuncSeparatei");
	gglIsRenderbuffer = (PFNGLISRENDERBUFFERPROC) getOpenGLProc("glIsRenderbuffer");
	gglBindRenderbuffer = (PFNGLBINDRENDERBUFFERPROC) getOpenGLProc("glBindRenderbuffer");
	gglDeleteRenderbuffers = (PFNGLDELETERENDERBUFFERSPROC) getOpenGLProc("glDeleteRenderbuffers");
	gglGenRenderbuffers = (PFNGLGENRENDERBUFFERSPROC) getOpenGLProc("glGenRenderbuffers");
	gglRenderbufferStorage = (PFNGLRENDERBUFFERSTORAGEPROC) getOpenGLProc("glRenderbufferStorage");
	gglGetRenderbufferParameteriv = (PFNGLGETRENDERBUFFERPARAMETERIVPROC) getOpenGLProc("glGetRenderbufferParameteriv");
	gglIsFramebuffer = (PFNGLISFRAMEBUFFERPROC) getOpenGLProc("glIsFramebuffer");
	gglBindFramebuffer = (PFNGLBINDFRAMEBUFFERPROC) getOpenGLProc("glBindFramebuffer");
	gglDeleteFramebuffers = (PFNGLDELETEFRAMEBUFFERSPROC) getOpenGLProc("glDeleteFramebuffers");
	gglGenFramebuffers = (PFNGLGENFRAMEBUFFERSPROC) getOpenGLProc("glGenFramebuffers");
	gglCheckFramebufferStatus = (PFNGLCHECKFRAMEBUFFERSTATUSPROC) getOpenGLProc("glCheckFramebufferStatus");
	gglFramebufferTexture1D = (PFNGLFRAMEBUFFERTEXTURE1DPROC) getOpenGLProc("glFramebufferTexture1D");
	gglFramebufferTexture2D = (PFNGLFRAMEBUFFERTEXTURE2DPROC) getOpenGLProc("glFramebufferTexture2D");
	gglFramebufferTexture3D = (PFNGLFRAMEBUFFERTEXTURE3DPROC) getOpenGLProc("glFramebufferTexture3D");
	gglFramebufferRenderbuffer = (PFNGLFRAMEBUFFERRENDERBUFFERPROC) getOpenGLProc("glFramebufferRenderbuffer");
	gglGetFramebufferAttachmentParameteriv = (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) getOpenGLProc("glGetFramebufferAttachmentParameteriv");
	gglGenerateMipmap = (PFNGLGENERATEMIPMAPPROC) getOpenGLProc("glGenerateMipmap");
	gglBlitFramebuffer = (PFNGLBLITFRAMEBUFFERPROC) getOpenGLProc("glBlitFramebuffer");
	gglRenderbufferStorageMultisample = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) getOpenGLProc("glRenderbufferStorageMultisample");
	gglFramebufferTextureLayer = (PFNGLFRAMEBUFFERTEXTURELAYERPROC) getOpenGLProc("glFramebufferTextureLayer");
	gglMapBufferRange = (PFNGLMAPBUFFERRANGEPROC) getOpenGLProc("glMapBufferRange");
	gglFlushMappedBufferRange = (PFNGLFLUSHMAPPEDBUFFERRANGEPROC) getOpenGLProc("glFlushMappedBufferRange");
	gglBindVertexArray = (PFNGLBINDVERTEXARRAYPROC) getOpenGLProc("glBindVertexArray");
	gglDeleteVertexArrays = (PFNGLDELETEVERTEXARRAYSPROC) getOpenGLProc("glDeleteVertexArrays");
	gglGenVertexArrays = (PFNGLGENVERTEXARRAYSPROC) getOpenGLProc("glGenVertexArrays");
	gglIsVertexArray = (PFNGLISVERTEXARRAYPROC) getOpenGLProc("glIsVertexArray");
	gglGetUniformIndices = (PFNGLGETUNIFORMINDICESPROC) getOpenGLProc("glGetUniformIndices");
	gglGetActiveUniformsiv = (PFNGLGETACTIVEUNIFORMSIVPROC) getOpenGLProc("glGetActiveUniformsiv");
	gglGetActiveUniformName = (PFNGLGETACTIVEUNIFORMNAMEPROC) getOpenGLProc("glGetActiveUniformName");
	gglGetUniformBlockIndex = (PFNGLGETUNIFORMBLOCKINDEXPROC) getOpenGLProc("glGetUniformBlockIndex");
	gglGetActiveUniformBlockiv = (PFNGLGETACTIVEUNIFORMBLOCKIVPROC) getOpenGLProc("glGetActiveUniformBlockiv");
	gglGetActiveUniformBlockName = (PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) getOpenGLProc("glGetActiveUniformBlockName");
	gglUniformBlockBinding = (PFNGLUNIFORMBLOCKBINDINGPROC) getOpenGLProc("glUniformBlockBinding");
	gglCopyBufferSubData = (PFNGLCOPYBUFFERSUBDATAPROC) getOpenGLProc("glCopyBufferSubData");
	gglDrawElementsBaseVertex = (PFNGLDRAWELEMENTSBASEVERTEXPROC) getOpenGLProc("glDrawElementsBaseVertex");
	gglDrawRangeElementsBaseVertex = (PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) getOpenGLProc("glDrawRangeElementsBaseVertex");
	gglDrawElementsInstancedBaseVertex = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) getOpenGLProc("glDrawElementsInstancedBaseVertex");
	gglMultiDrawElementsBaseVertex = (PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) getOpenGLProc("glMultiDrawElementsBaseVertex");
	gglProvokingVertex = (PFNGLPROVOKINGVERTEXPROC) getOpenGLProc("glProvokingVertex");
	gglFenceSync = (PFNGLFENCESYNCPROC) getOpenGLProc("glFenceSync");
	gglIsSync = (PFNGLISSYNCPROC) getOpenGLProc("glIsSync");
	gglDeleteSync = (PFNGLDELETESYNCPROC) getOpenGLProc("glDeleteSync");
	gglClientWaitSync = (PFNGLCLIENTWAITSYNCPROC) getOpenGLProc("glClientWaitSync");
	gglWaitSync = (PFNGLWAITSYNCPROC) getOpenGLProc("glWaitSync");
	gglGetInteger64v = (PFNGLGETINTEGER64VPROC) getOpenGLProc("glGetInteger64v");
	gglGetSynciv = (PFNGLGETSYNCIVPROC) getOpenGLProc("glGetSynciv");
	gglTexImage2DMultisample = (PFNGLTEXIMAGE2DMULTISAMPLEPROC) getOpenGLProc("glTexImage2DMultisample");
	gglTexImage3DMultisample = (PFNGLTEXIMAGE3DMULTISAMPLEPROC) getOpenGLProc("glTexImage3DMultisample");
	gglGetMultisamplefv = (PFNGLGETMULTISAMPLEFVPROC) getOpenGLProc("glGetMultisamplefv");
	gglSampleMaski = (PFNGLSAMPLEMASKIPROC) getOpenGLProc("glSampleMaski");
	gglBlendEquationiARB = (PFNGLBLENDEQUATIONIARBPROC) getOpenGLProc("glBlendEquationiARB");
	gglBlendEquationSeparateiARB = (PFNGLBLENDEQUATIONSEPARATEIARBPROC) getOpenGLProc("glBlendEquationSeparateiARB");
	gglBlendFunciARB = (PFNGLBLENDFUNCIARBPROC) getOpenGLProc("glBlendFunciARB");
	gglBlendFuncSeparateiARB = (PFNGLBLENDFUNCSEPARATEIARBPROC) getOpenGLProc("glBlendFuncSeparateiARB");
	gglMinSampleShadingARB = (PFNGLMINSAMPLESHADINGARBPROC) getOpenGLProc("glMinSampleShadingARB");
	gglNamedStringARB = (PFNGLNAMEDSTRINGARBPROC) getOpenGLProc("glNamedStringARB");
	gglDeleteNamedStringARB = (PFNGLDELETENAMEDSTRINGARBPROC) getOpenGLProc("glDeleteNamedStringARB");
	gglCompileShaderIncludeARB = (PFNGLCOMPILESHADERINCLUDEARBPROC) getOpenGLProc("glCompileShaderIncludeARB");
	gglIsNamedStringARB = (PFNGLISNAMEDSTRINGARBPROC) getOpenGLProc("glIsNamedStringARB");
	gglGetNamedStringARB = (PFNGLGETNAMEDSTRINGARBPROC) getOpenGLProc("glGetNamedStringARB");
	gglGetNamedStringivARB = (PFNGLGETNAMEDSTRINGIVARBPROC) getOpenGLProc("glGetNamedStringivARB");
	gglBindFragDataLocationIndexed = (PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) getOpenGLProc("glBindFragDataLocationIndexed");
	gglGetFragDataIndex = (PFNGLGETFRAGDATAINDEXPROC) getOpenGLProc("glGetFragDataIndex");
	gglGenSamplers = (PFNGLGENSAMPLERSPROC) getOpenGLProc("glGenSamplers");
	gglDeleteSamplers = (PFNGLDELETESAMPLERSPROC) getOpenGLProc("glDeleteSamplers");
	gglIsSampler = (PFNGLISSAMPLERPROC) getOpenGLProc("glIsSampler");
	gglBindSampler = (PFNGLBINDSAMPLERPROC) getOpenGLProc("glBindSampler");
	gglSamplerParameteri = (PFNGLSAMPLERPARAMETERIPROC) getOpenGLProc("glSamplerParameteri");
	gglSamplerParameteriv = (PFNGLSAMPLERPARAMETERIVPROC) getOpenGLProc("glSamplerParameteriv");
	gglSamplerParameterf = (PFNGLSAMPLERPARAMETERFPROC) getOpenGLProc("glSamplerParameterf");
	gglSamplerParameterfv = (PFNGLSAMPLERPARAMETERFVPROC) getOpenGLProc("glSamplerParameterfv");
	gglSamplerParameterIiv = (PFNGLSAMPLERPARAMETERIIVPROC) getOpenGLProc("glSamplerParameterIiv");
	gglSamplerParameterIuiv = (PFNGLSAMPLERPARAMETERIUIVPROC) getOpenGLProc("glSamplerParameterIuiv");
	gglGetSamplerParameteriv = (PFNGLGETSAMPLERPARAMETERIVPROC) getOpenGLProc("glGetSamplerParameteriv");
	gglGetSamplerParameterIiv = (PFNGLGETSAMPLERPARAMETERIIVPROC) getOpenGLProc("glGetSamplerParameterIiv");
	gglGetSamplerParameterfv = (PFNGLGETSAMPLERPARAMETERFVPROC) getOpenGLProc("glGetSamplerParameterfv");
	gglGetSamplerParameterIuiv = (PFNGLGETSAMPLERPARAMETERIUIVPROC) getOpenGLProc("glGetSamplerParameterIuiv");
	gglQueryCounter = (PFNGLQUERYCOUNTERPROC) getOpenGLProc("glQueryCounter");
	gglGetQueryObjecti64v = (PFNGLGETQUERYOBJECTI64VPROC) getOpenGLProc("glGetQueryObjecti64v");
	gglGetQueryObjectui64v = (PFNGLGETQUERYOBJECTUI64VPROC) getOpenGLProc("glGetQueryObjectui64v");
	gglVertexP2ui = (PFNGLVERTEXP2UIPROC) getOpenGLProc("glVertexP2ui");
	gglVertexP2uiv = (PFNGLVERTEXP2UIVPROC) getOpenGLProc("glVertexP2uiv");
	gglVertexP3ui = (PFNGLVERTEXP3UIPROC) getOpenGLProc("glVertexP3ui");
	gglVertexP3uiv = (PFNGLVERTEXP3UIVPROC) getOpenGLProc("glVertexP3uiv");
	gglVertexP4ui = (PFNGLVERTEXP4UIPROC) getOpenGLProc("glVertexP4ui");
	gglVertexP4uiv = (PFNGLVERTEXP4UIVPROC) getOpenGLProc("glVertexP4uiv");
	gglTexCoordP1ui = (PFNGLTEXCOORDP1UIPROC) getOpenGLProc("glTexCoordP1ui");
	gglTexCoordP1uiv = (PFNGLTEXCOORDP1UIVPROC) getOpenGLProc("glTexCoordP1uiv");
	gglTexCoordP2ui = (PFNGLTEXCOORDP2UIPROC) getOpenGLProc("glTexCoordP2ui");
	gglTexCoordP2uiv = (PFNGLTEXCOORDP2UIVPROC) getOpenGLProc("glTexCoordP2uiv");
	gglTexCoordP3ui = (PFNGLTEXCOORDP3UIPROC) getOpenGLProc("glTexCoordP3ui");
	gglTexCoordP3uiv = (PFNGLTEXCOORDP3UIVPROC) getOpenGLProc("glTexCoordP3uiv");
	gglTexCoordP4ui = (PFNGLTEXCOORDP4UIPROC) getOpenGLProc("glTexCoordP4ui");
	gglTexCoordP4uiv = (PFNGLTEXCOORDP4UIVPROC) getOpenGLProc("glTexCoordP4uiv");
	gglMultiTexCoordP1ui = (PFNGLMULTITEXCOORDP1UIPROC) getOpenGLProc("glMultiTexCoordP1ui");
	gglMultiTexCoordP1uiv = (PFNGLMULTITEXCOORDP1UIVPROC) getOpenGLProc("glMultiTexCoordP1uiv");
	gglMultiTexCoordP2ui = (PFNGLMULTITEXCOORDP2UIPROC) getOpenGLProc("glMultiTexCoordP2ui");
	gglMultiTexCoordP2uiv = (PFNGLMULTITEXCOORDP2UIVPROC) getOpenGLProc("glMultiTexCoordP2uiv");
	gglMultiTexCoordP3ui = (PFNGLMULTITEXCOORDP3UIPROC) getOpenGLProc("glMultiTexCoordP3ui");
	gglMultiTexCoordP3uiv = (PFNGLMULTITEXCOORDP3UIVPROC) getOpenGLProc("glMultiTexCoordP3uiv");
	gglMultiTexCoordP4ui = (PFNGLMULTITEXCOORDP4UIPROC) getOpenGLProc("glMultiTexCoordP4ui");
	gglMultiTexCoordP4uiv = (PFNGLMULTITEXCOORDP4UIVPROC) getOpenGLProc("glMultiTexCoordP4uiv");
	gglNormalP3ui = (PFNGLNORMALP3UIPROC) getOpenGLProc("glNormalP3ui");
	gglNormalP3uiv = (PFNGLNORMALP3UIVPROC) getOpenGLProc("glNormalP3uiv");
	gglColorP3ui = (PFNGLCOLORP3UIPROC) getOpenGLProc("glColorP3ui");
	gglColorP3uiv = (PFNGLCOLORP3UIVPROC) getOpenGLProc("glColorP3uiv");
	gglColorP4ui = (PFNGLCOLORP4UIPROC) getOpenGLProc("glColorP4ui");
	gglColorP4uiv = (PFNGLCOLORP4UIVPROC) getOpenGLProc("glColorP4uiv");
	gglSecondaryColorP3ui = (PFNGLSECONDARYCOLORP3UIPROC) getOpenGLProc("glSecondaryColorP3ui");
	gglSecondaryColorP3uiv = (PFNGLSECONDARYCOLORP3UIVPROC) getOpenGLProc("glSecondaryColorP3uiv");
	gglVertexAttribP1ui = (PFNGLVERTEXATTRIBP1UIPROC) getOpenGLProc("glVertexAttribP1ui");
	gglVertexAttribP1uiv = (PFNGLVERTEXATTRIBP1UIVPROC) getOpenGLProc("glVertexAttribP1uiv");
	gglVertexAttribP2ui = (PFNGLVERTEXATTRIBP2UIPROC) getOpenGLProc("glVertexAttribP2ui");
	gglVertexAttribP2uiv = (PFNGLVERTEXATTRIBP2UIVPROC) getOpenGLProc("glVertexAttribP2uiv");
	gglVertexAttribP3ui = (PFNGLVERTEXATTRIBP3UIPROC) getOpenGLProc("glVertexAttribP3ui");
	gglVertexAttribP3uiv = (PFNGLVERTEXATTRIBP3UIVPROC) getOpenGLProc("glVertexAttribP3uiv");
	gglVertexAttribP4ui = (PFNGLVERTEXATTRIBP4UIPROC) getOpenGLProc("glVertexAttribP4ui");
	gglVertexAttribP4uiv = (PFNGLVERTEXATTRIBP4UIVPROC) getOpenGLProc("glVertexAttribP4uiv");
	gglDrawArraysIndirect = (PFNGLDRAWARRAYSINDIRECTPROC) getOpenGLProc("glDrawArraysIndirect");
	gglDrawElementsIndirect = (PFNGLDRAWELEMENTSINDIRECTPROC) getOpenGLProc("glDrawElementsIndirect");
	gglUniform1d = (PFNGLUNIFORM1DPROC) getOpenGLProc("glUniform1d");
	gglUniform2d = (PFNGLUNIFORM2DPROC) getOpenGLProc("glUniform2d");
	gglUniform3d = (PFNGLUNIFORM3DPROC) getOpenGLProc("glUniform3d");
	gglUniform4d = (PFNGLUNIFORM4DPROC) getOpenGLProc("glUniform4d");
	gglUniform1dv = (PFNGLUNIFORM1DVPROC) getOpenGLProc("glUniform1dv");
	gglUniform2dv = (PFNGLUNIFORM2DVPROC) getOpenGLProc("glUniform2dv");
	gglUniform3dv = (PFNGLUNIFORM3DVPROC) getOpenGLProc("glUniform3dv");
	gglUniform4dv = (PFNGLUNIFORM4DVPROC) getOpenGLProc("glUniform4dv");
	gglUniformMatrix2dv = (PFNGLUNIFORMMATRIX2DVPROC) getOpenGLProc("glUniformMatrix2dv");
	gglUniformMatrix3dv = (PFNGLUNIFORMMATRIX3DVPROC) getOpenGLProc("glUniformMatrix3dv");
	gglUniformMatrix4dv = (PFNGLUNIFORMMATRIX4DVPROC) getOpenGLProc("glUniformMatrix4dv");
	gglUniformMatrix2x3dv = (PFNGLUNIFORMMATRIX2X3DVPROC) getOpenGLProc("glUniformMatrix2x3dv");
	gglUniformMatrix2x4dv = (PFNGLUNIFORMMATRIX2X4DVPROC) getOpenGLProc("glUniformMatrix2x4dv");
	gglUniformMatrix3x2dv = (PFNGLUNIFORMMATRIX3X2DVPROC) getOpenGLProc("glUniformMatrix3x2dv");
	gglUniformMatrix3x4dv = (PFNGLUNIFORMMATRIX3X4DVPROC) getOpenGLProc("glUniformMatrix3x4dv");
	gglUniformMatrix4x2dv = (PFNGLUNIFORMMATRIX4X2DVPROC) getOpenGLProc("glUniformMatrix4x2dv");
	gglUniformMatrix4x3dv = (PFNGLUNIFORMMATRIX4X3DVPROC) getOpenGLProc("glUniformMatrix4x3dv");
	gglGetUniformdv = (PFNGLGETUNIFORMDVPROC) getOpenGLProc("glGetUniformdv");
	gglGetSubroutineUniformLocation = (PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) getOpenGLProc("glGetSubroutineUniformLocation");
	gglGetSubroutineIndex = (PFNGLGETSUBROUTINEINDEXPROC) getOpenGLProc("glGetSubroutineIndex");
	gglGetActiveSubroutineUniformiv = (PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) getOpenGLProc("glGetActiveSubroutineUniformiv");
	gglGetActiveSubroutineUniformName = (PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) getOpenGLProc("glGetActiveSubroutineUniformName");
	gglGetActiveSubroutineName = (PFNGLGETACTIVESUBROUTINENAMEPROC) getOpenGLProc("glGetActiveSubroutineName");
	gglUniformSubroutinesuiv = (PFNGLUNIFORMSUBROUTINESUIVPROC) getOpenGLProc("glUniformSubroutinesuiv");
	gglGetUniformSubroutineuiv = (PFNGLGETUNIFORMSUBROUTINEUIVPROC) getOpenGLProc("glGetUniformSubroutineuiv");
	gglGetProgramStageiv = (PFNGLGETPROGRAMSTAGEIVPROC) getOpenGLProc("glGetProgramStageiv");
	gglPatchParameteri = (PFNGLPATCHPARAMETERIPROC) getOpenGLProc("glPatchParameteri");
	gglPatchParameterfv = (PFNGLPATCHPARAMETERFVPROC) getOpenGLProc("glPatchParameterfv");
	gglBindTransformFeedback = (PFNGLBINDTRANSFORMFEEDBACKPROC) getOpenGLProc("glBindTransformFeedback");
	gglDeleteTransformFeedbacks = (PFNGLDELETETRANSFORMFEEDBACKSPROC) getOpenGLProc("glDeleteTransformFeedbacks");
	gglGenTransformFeedbacks = (PFNGLGENTRANSFORMFEEDBACKSPROC) getOpenGLProc("glGenTransformFeedbacks");
	gglIsTransformFeedback = (PFNGLISTRANSFORMFEEDBACKPROC) getOpenGLProc("glIsTransformFeedback");
	gglPauseTransformFeedback = (PFNGLPAUSETRANSFORMFEEDBACKPROC) getOpenGLProc("glPauseTransformFeedback");
	gglResumeTransformFeedback = (PFNGLRESUMETRANSFORMFEEDBACKPROC) getOpenGLProc("glResumeTransformFeedback");
	gglDrawTransformFeedback = (PFNGLDRAWTRANSFORMFEEDBACKPROC) getOpenGLProc("glDrawTransformFeedback");
	gglDrawTransformFeedbackStream = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) getOpenGLProc("glDrawTransformFeedbackStream");
	gglBeginQueryIndexed = (PFNGLBEGINQUERYINDEXEDPROC) getOpenGLProc("glBeginQueryIndexed");
	gglEndQueryIndexed = (PFNGLENDQUERYINDEXEDPROC) getOpenGLProc("glEndQueryIndexed");
	gglGetQueryIndexediv = (PFNGLGETQUERYINDEXEDIVPROC) getOpenGLProc("glGetQueryIndexediv");
	gglReleaseShaderCompiler = (PFNGLRELEASESHADERCOMPILERPROC) getOpenGLProc("glReleaseShaderCompiler");
	gglShaderBinary = (PFNGLSHADERBINARYPROC) getOpenGLProc("glShaderBinary");
	gglGetShaderPrecisionFormat = (PFNGLGETSHADERPRECISIONFORMATPROC) getOpenGLProc("glGetShaderPrecisionFormat");
	gglDepthRangef = (PFNGLDEPTHRANGEFPROC) getOpenGLProc("glDepthRangef");
	gglClearDepthf = (PFNGLCLEARDEPTHFPROC) getOpenGLProc("glClearDepthf");
	gglGetProgramBinary = (PFNGLGETPROGRAMBINARYPROC) getOpenGLProc("glGetProgramBinary");
	gglProgramBinary = (PFNGLPROGRAMBINARYPROC) getOpenGLProc("glProgramBinary");
	gglProgramParameteri = (PFNGLPROGRAMPARAMETERIPROC) getOpenGLProc("glProgramParameteri");
	gglUseProgramStages = (PFNGLUSEPROGRAMSTAGESPROC) getOpenGLProc("glUseProgramStages");
	gglActiveShaderProgram = (PFNGLACTIVESHADERPROGRAMPROC) getOpenGLProc("glActiveShaderProgram");
	gglCreateShaderProgramv = (PFNGLCREATESHADERPROGRAMVPROC) getOpenGLProc("glCreateShaderProgramv");
	gglBindProgramPipeline = (PFNGLBINDPROGRAMPIPELINEPROC) getOpenGLProc("glBindProgramPipeline");
	gglDeleteProgramPipelines = (PFNGLDELETEPROGRAMPIPELINESPROC) getOpenGLProc("glDeleteProgramPipelines");
	gglGenProgramPipelines = (PFNGLGENPROGRAMPIPELINESPROC) getOpenGLProc("glGenProgramPipelines");
	gglIsProgramPipeline = (PFNGLISPROGRAMPIPELINEPROC) getOpenGLProc("glIsProgramPipeline");
	gglGetProgramPipelineiv = (PFNGLGETPROGRAMPIPELINEIVPROC) getOpenGLProc("glGetProgramPipelineiv");
	gglProgramUniform1i = (PFNGLPROGRAMUNIFORM1IPROC) getOpenGLProc("glProgramUniform1i");
	gglProgramUniform1iv = (PFNGLPROGRAMUNIFORM1IVPROC) getOpenGLProc("glProgramUniform1iv");
	gglProgramUniform1f = (PFNGLPROGRAMUNIFORM1FPROC) getOpenGLProc("glProgramUniform1f");
	gglProgramUniform1fv = (PFNGLPROGRAMUNIFORM1FVPROC) getOpenGLProc("glProgramUniform1fv");
	gglProgramUniform1d = (PFNGLPROGRAMUNIFORM1DPROC) getOpenGLProc("glProgramUniform1d");
	gglProgramUniform1dv = (PFNGLPROGRAMUNIFORM1DVPROC) getOpenGLProc("glProgramUniform1dv");
	gglProgramUniform1ui = (PFNGLPROGRAMUNIFORM1UIPROC) getOpenGLProc("glProgramUniform1ui");
	gglProgramUniform1uiv = (PFNGLPROGRAMUNIFORM1UIVPROC) getOpenGLProc("glProgramUniform1uiv");
	gglProgramUniform2i = (PFNGLPROGRAMUNIFORM2IPROC) getOpenGLProc("glProgramUniform2i");
	gglProgramUniform2iv = (PFNGLPROGRAMUNIFORM2IVPROC) getOpenGLProc("glProgramUniform2iv");
	gglProgramUniform2f = (PFNGLPROGRAMUNIFORM2FPROC) getOpenGLProc("glProgramUniform2f");
	gglProgramUniform2fv = (PFNGLPROGRAMUNIFORM2FVPROC) getOpenGLProc("glProgramUniform2fv");
	gglProgramUniform2d = (PFNGLPROGRAMUNIFORM2DPROC) getOpenGLProc("glProgramUniform2d");
	gglProgramUniform2dv = (PFNGLPROGRAMUNIFORM2DVPROC) getOpenGLProc("glProgramUniform2dv");
	gglProgramUniform2ui = (PFNGLPROGRAMUNIFORM2UIPROC) getOpenGLProc("glProgramUniform2ui");
	gglProgramUniform2uiv = (PFNGLPROGRAMUNIFORM2UIVPROC) getOpenGLProc("glProgramUniform2uiv");
	gglProgramUniform3i = (PFNGLPROGRAMUNIFORM3IPROC) getOpenGLProc("glProgramUniform3i");
	gglProgramUniform3iv = (PFNGLPROGRAMUNIFORM3IVPROC) getOpenGLProc("glProgramUniform3iv");
	gglProgramUniform3f = (PFNGLPROGRAMUNIFORM3FPROC) getOpenGLProc("glProgramUniform3f");
	gglProgramUniform3fv = (PFNGLPROGRAMUNIFORM3FVPROC) getOpenGLProc("glProgramUniform3fv");
	gglProgramUniform3d = (PFNGLPROGRAMUNIFORM3DPROC) getOpenGLProc("glProgramUniform3d");
	gglProgramUniform3dv = (PFNGLPROGRAMUNIFORM3DVPROC) getOpenGLProc("glProgramUniform3dv");
	gglProgramUniform3ui = (PFNGLPROGRAMUNIFORM3UIPROC) getOpenGLProc("glProgramUniform3ui");
	gglProgramUniform3uiv = (PFNGLPROGRAMUNIFORM3UIVPROC) getOpenGLProc("glProgramUniform3uiv");
	gglProgramUniform4i = (PFNGLPROGRAMUNIFORM4IPROC) getOpenGLProc("glProgramUniform4i");
	gglProgramUniform4iv = (PFNGLPROGRAMUNIFORM4IVPROC) getOpenGLProc("glProgramUniform4iv");
	gglProgramUniform4f = (PFNGLPROGRAMUNIFORM4FPROC) getOpenGLProc("glProgramUniform4f");
	gglProgramUniform4fv = (PFNGLPROGRAMUNIFORM4FVPROC) getOpenGLProc("glProgramUniform4fv");
	gglProgramUniform4d = (PFNGLPROGRAMUNIFORM4DPROC) getOpenGLProc("glProgramUniform4d");
	gglProgramUniform4dv = (PFNGLPROGRAMUNIFORM4DVPROC) getOpenGLProc("glProgramUniform4dv");
	gglProgramUniform4ui = (PFNGLPROGRAMUNIFORM4UIPROC) getOpenGLProc("glProgramUniform4ui");
	gglProgramUniform4uiv = (PFNGLPROGRAMUNIFORM4UIVPROC) getOpenGLProc("glProgramUniform4uiv");
	gglProgramUniformMatrix2fv = (PFNGLPROGRAMUNIFORMMATRIX2FVPROC) getOpenGLProc("glProgramUniformMatrix2fv");
	gglProgramUniformMatrix3fv = (PFNGLPROGRAMUNIFORMMATRIX3FVPROC) getOpenGLProc("glProgramUniformMatrix3fv");
	gglProgramUniformMatrix4fv = (PFNGLPROGRAMUNIFORMMATRIX4FVPROC) getOpenGLProc("glProgramUniformMatrix4fv");
	gglProgramUniformMatrix2dv = (PFNGLPROGRAMUNIFORMMATRIX2DVPROC) getOpenGLProc("glProgramUniformMatrix2dv");
	gglProgramUniformMatrix3dv = (PFNGLPROGRAMUNIFORMMATRIX3DVPROC) getOpenGLProc("glProgramUniformMatrix3dv");
	gglProgramUniformMatrix4dv = (PFNGLPROGRAMUNIFORMMATRIX4DVPROC) getOpenGLProc("glProgramUniformMatrix4dv");
	gglProgramUniformMatrix2x3fv = (PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) getOpenGLProc("glProgramUniformMatrix2x3fv");
	gglProgramUniformMatrix3x2fv = (PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) getOpenGLProc("glProgramUniformMatrix3x2fv");
	gglProgramUniformMatrix2x4fv = (PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) getOpenGLProc("glProgramUniformMatrix2x4fv");
	gglProgramUniformMatrix4x2fv = (PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) getOpenGLProc("glProgramUniformMatrix4x2fv");
	gglProgramUniformMatrix3x4fv = (PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) getOpenGLProc("glProgramUniformMatrix3x4fv");
	gglProgramUniformMatrix4x3fv = (PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) getOpenGLProc("glProgramUniformMatrix4x3fv");
	gglProgramUniformMatrix2x3dv = (PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) getOpenGLProc("glProgramUniformMatrix2x3dv");
	gglProgramUniformMatrix3x2dv = (PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) getOpenGLProc("glProgramUniformMatrix3x2dv");
	gglProgramUniformMatrix2x4dv = (PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) getOpenGLProc("glProgramUniformMatrix2x4dv");
	gglProgramUniformMatrix4x2dv = (PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) getOpenGLProc("glProgramUniformMatrix4x2dv");
	gglProgramUniformMatrix3x4dv = (PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) getOpenGLProc("glProgramUniformMatrix3x4dv");
	gglProgramUniformMatrix4x3dv = (PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) getOpenGLProc("glProgramUniformMatrix4x3dv");
	gglValidateProgramPipeline = (PFNGLVALIDATEPROGRAMPIPELINEPROC) getOpenGLProc("glValidateProgramPipeline");
	gglGetProgramPipelineInfoLog = (PFNGLGETPROGRAMPIPELINEINFOLOGPROC) getOpenGLProc("glGetProgramPipelineInfoLog");
	gglVertexAttribL1d = (PFNGLVERTEXATTRIBL1DPROC) getOpenGLProc("glVertexAttribL1d");
	gglVertexAttribL2d = (PFNGLVERTEXATTRIBL2DPROC) getOpenGLProc("glVertexAttribL2d");
	gglVertexAttribL3d = (PFNGLVERTEXATTRIBL3DPROC) getOpenGLProc("glVertexAttribL3d");
	gglVertexAttribL4d = (PFNGLVERTEXATTRIBL4DPROC) getOpenGLProc("glVertexAttribL4d");
	gglVertexAttribL1dv = (PFNGLVERTEXATTRIBL1DVPROC) getOpenGLProc("glVertexAttribL1dv");
	gglVertexAttribL2dv = (PFNGLVERTEXATTRIBL2DVPROC) getOpenGLProc("glVertexAttribL2dv");
	gglVertexAttribL3dv = (PFNGLVERTEXATTRIBL3DVPROC) getOpenGLProc("glVertexAttribL3dv");
	gglVertexAttribL4dv = (PFNGLVERTEXATTRIBL4DVPROC) getOpenGLProc("glVertexAttribL4dv");
	gglVertexAttribLPointer = (PFNGLVERTEXATTRIBLPOINTERPROC) getOpenGLProc("glVertexAttribLPointer");
	gglGetVertexAttribLdv = (PFNGLGETVERTEXATTRIBLDVPROC) getOpenGLProc("glGetVertexAttribLdv");
	gglViewportArrayv = (PFNGLVIEWPORTARRAYVPROC) getOpenGLProc("glViewportArrayv");
	gglViewportIndexedf = (PFNGLVIEWPORTINDEXEDFPROC) getOpenGLProc("glViewportIndexedf");
	gglViewportIndexedfv = (PFNGLVIEWPORTINDEXEDFVPROC) getOpenGLProc("glViewportIndexedfv");
	gglScissorArrayv = (PFNGLSCISSORARRAYVPROC) getOpenGLProc("glScissorArrayv");
	gglScissorIndexed = (PFNGLSCISSORINDEXEDPROC) getOpenGLProc("glScissorIndexed");
	gglScissorIndexedv = (PFNGLSCISSORINDEXEDVPROC) getOpenGLProc("glScissorIndexedv");
	gglDepthRangeArrayv = (PFNGLDEPTHRANGEARRAYVPROC) getOpenGLProc("glDepthRangeArrayv");
	gglDepthRangeIndexed = (PFNGLDEPTHRANGEINDEXEDPROC) getOpenGLProc("glDepthRangeIndexed");
	gglGetFloati_v = (PFNGLGETFLOATI_VPROC) getOpenGLProc("glGetFloati_v");
	gglGetDoublei_v = (PFNGLGETDOUBLEI_VPROC) getOpenGLProc("glGetDoublei_v");
	gglCreateSyncFromCLeventARB = (PFNGLCREATESYNCFROMCLEVENTARBPROC) getOpenGLProc("glCreateSyncFromCLeventARB");
	gglDebugMessageControlARB = (PFNGLDEBUGMESSAGECONTROLARBPROC) getOpenGLProc("glDebugMessageControlARB");
	gglDebugMessageInsertARB = (PFNGLDEBUGMESSAGEINSERTARBPROC) getOpenGLProc("glDebugMessageInsertARB");
	gglDebugMessageCallbackARB = (PFNGLDEBUGMESSAGECALLBACKARBPROC) getOpenGLProc("glDebugMessageCallbackARB");
	gglGetDebugMessageLogARB = (PFNGLGETDEBUGMESSAGELOGARBPROC) getOpenGLProc("glGetDebugMessageLogARB");
	gglGetGraphicsResetStatusARB = (PFNGLGETGRAPHICSRESETSTATUSARBPROC) getOpenGLProc("glGetGraphicsResetStatusARB");
	gglGetnTexImageARB = (PFNGLGETNTEXIMAGEARBPROC) getOpenGLProc("glGetnTexImageARB");
	gglReadnPixelsARB = (PFNGLREADNPIXELSARBPROC) getOpenGLProc("glReadnPixelsARB");
	gglGetnCompressedTexImageARB = (PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) getOpenGLProc("glGetnCompressedTexImageARB");
	gglGetnUniformfvARB = (PFNGLGETNUNIFORMFVARBPROC) getOpenGLProc("glGetnUniformfvARB");
	gglGetnUniformivARB = (PFNGLGETNUNIFORMIVARBPROC) getOpenGLProc("glGetnUniformivARB");
	gglGetnUniformuivARB = (PFNGLGETNUNIFORMUIVARBPROC) getOpenGLProc("glGetnUniformuivARB");
	gglGetnUniformdvARB = (PFNGLGETNUNIFORMDVARBPROC) getOpenGLProc("glGetnUniformdvARB");
	gglDrawArraysInstancedBaseInstance = (PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) getOpenGLProc("glDrawArraysInstancedBaseInstance");
	gglDrawElementsInstancedBaseInstance = (PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) getOpenGLProc("glDrawElementsInstancedBaseInstance");
	gglDrawElementsInstancedBaseVertexBaseInstance = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) getOpenGLProc("glDrawElementsInstancedBaseVertexBaseInstance");
	gglDrawTransformFeedbackInstanced = (PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) getOpenGLProc("glDrawTransformFeedbackInstanced");
	gglDrawTransformFeedbackStreamInstanced = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) getOpenGLProc("glDrawTransformFeedbackStreamInstanced");
	gglGetInternalformativ = (PFNGLGETINTERNALFORMATIVPROC) getOpenGLProc("glGetInternalformativ");
	gglGetActiveAtomicCounterBufferiv = (PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) getOpenGLProc("glGetActiveAtomicCounterBufferiv");
	gglBindImageTexture = (PFNGLBINDIMAGETEXTUREPROC) getOpenGLProc("glBindImageTexture");
	gglMemoryBarrier = (PFNGLMEMORYBARRIERPROC) getOpenGLProc("glMemoryBarrier");
	gglTexStorage1D = (PFNGLTEXSTORAGE1DPROC) getOpenGLProc("glTexStorage1D");
	gglTexStorage2D = (PFNGLTEXSTORAGE2DPROC) getOpenGLProc("glTexStorage2D");
	gglTexStorage3D = (PFNGLTEXSTORAGE3DPROC) getOpenGLProc("glTexStorage3D");
	gglTextureStorage1DEXT = (PFNGLTEXTURESTORAGE1DEXTPROC) getOpenGLProc("glTextureStorage1DEXT");
	gglTextureStorage2DEXT = (PFNGLTEXTURESTORAGE2DEXTPROC) getOpenGLProc("glTextureStorage2DEXT");
	gglTextureStorage3DEXT = (PFNGLTEXTURESTORAGE3DEXTPROC) getOpenGLProc("glTextureStorage3DEXT");
	gglDebugMessageControl = (PFNGLDEBUGMESSAGECONTROLPROC) getOpenGLProc("glDebugMessageControl");
	gglDebugMessageInsert = (PFNGLDEBUGMESSAGEINSERTPROC) getOpenGLProc("glDebugMessageInsert");
	gglDebugMessageCallback = (PFNGLDEBUGMESSAGECALLBACKPROC) getOpenGLProc("glDebugMessageCallback");
	gglGetDebugMessageLog = (PFNGLGETDEBUGMESSAGELOGPROC) getOpenGLProc("glGetDebugMessageLog");
	gglPushDebugGroup = (PFNGLPUSHDEBUGGROUPPROC) getOpenGLProc("glPushDebugGroup");
	gglPopDebugGroup = (PFNGLPOPDEBUGGROUPPROC) getOpenGLProc("glPopDebugGroup");
	gglObjectLabel = (PFNGLOBJECTLABELPROC) getOpenGLProc("glObjectLabel");
	gglGetObjectLabel = (PFNGLGETOBJECTLABELPROC) getOpenGLProc("glGetObjectLabel");
	gglObjectPtrLabel = (PFNGLOBJECTPTRLABELPROC) getOpenGLProc("glObjectPtrLabel");
	gglGetObjectPtrLabel = (PFNGLGETOBJECTPTRLABELPROC) getOpenGLProc("glGetObjectPtrLabel");
	gglClearBufferData = (PFNGLCLEARBUFFERDATAPROC) getOpenGLProc("glClearBufferData");
	gglClearBufferSubData = (PFNGLCLEARBUFFERSUBDATAPROC) getOpenGLProc("glClearBufferSubData");
	gglClearNamedBufferDataEXT = (PFNGLCLEARNAMEDBUFFERDATAEXTPROC) getOpenGLProc("glClearNamedBufferDataEXT");
	gglClearNamedBufferSubDataEXT = (PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC) getOpenGLProc("glClearNamedBufferSubDataEXT");
	gglDispatchCompute = (PFNGLDISPATCHCOMPUTEPROC) getOpenGLProc("glDispatchCompute");
	gglDispatchComputeIndirect = (PFNGLDISPATCHCOMPUTEINDIRECTPROC) getOpenGLProc("glDispatchComputeIndirect");
	gglCopyImageSubData = (PFNGLCOPYIMAGESUBDATAPROC) getOpenGLProc("glCopyImageSubData");
	gglTextureView = (PFNGLTEXTUREVIEWPROC) getOpenGLProc("glTextureView");
	gglBindVertexBuffer = (PFNGLBINDVERTEXBUFFERPROC) getOpenGLProc("glBindVertexBuffer");
	gglVertexAttribFormat = (PFNGLVERTEXATTRIBFORMATPROC) getOpenGLProc("glVertexAttribFormat");
	gglVertexAttribIFormat = (PFNGLVERTEXATTRIBIFORMATPROC) getOpenGLProc("glVertexAttribIFormat");
	gglVertexAttribLFormat = (PFNGLVERTEXATTRIBLFORMATPROC) getOpenGLProc("glVertexAttribLFormat");
	gglVertexAttribBinding = (PFNGLVERTEXATTRIBBINDINGPROC) getOpenGLProc("glVertexAttribBinding");
	gglVertexBindingDivisor = (PFNGLVERTEXBINDINGDIVISORPROC) getOpenGLProc("glVertexBindingDivisor");
	gglVertexArrayBindVertexBufferEXT = (PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC) getOpenGLProc("glVertexArrayBindVertexBufferEXT");
	gglVertexArrayVertexAttribFormatEXT = (PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) getOpenGLProc("glVertexArrayVertexAttribFormatEXT");
	gglVertexArrayVertexAttribIFormatEXT = (PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) getOpenGLProc("glVertexArrayVertexAttribIFormatEXT");
	gglVertexArrayVertexAttribLFormatEXT = (PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) getOpenGLProc("glVertexArrayVertexAttribLFormatEXT");
	gglVertexArrayVertexAttribBindingEXT = (PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) getOpenGLProc("glVertexArrayVertexAttribBindingEXT");
	gglVertexArrayVertexBindingDivisorEXT = (PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) getOpenGLProc("glVertexArrayVertexBindingDivisorEXT");
	gglFramebufferParameteri = (PFNGLFRAMEBUFFERPARAMETERIPROC) getOpenGLProc("glFramebufferParameteri");
	gglGetFramebufferParameteriv = (PFNGLGETFRAMEBUFFERPARAMETERIVPROC) getOpenGLProc("glGetFramebufferParameteriv");
	gglNamedFramebufferParameteriEXT = (PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC) getOpenGLProc("glNamedFramebufferParameteriEXT");
	gglGetNamedFramebufferParameterivEXT = (PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC) getOpenGLProc("glGetNamedFramebufferParameterivEXT");
	gglGetInternalformati64v = (PFNGLGETINTERNALFORMATI64VPROC) getOpenGLProc("glGetInternalformati64v");
	gglInvalidateTexSubImage = (PFNGLINVALIDATETEXSUBIMAGEPROC) getOpenGLProc("glInvalidateTexSubImage");
	gglInvalidateTexImage = (PFNGLINVALIDATETEXIMAGEPROC) getOpenGLProc("glInvalidateTexImage");
	gglInvalidateBufferSubData = (PFNGLINVALIDATEBUFFERSUBDATAPROC) getOpenGLProc("glInvalidateBufferSubData");
	gglInvalidateBufferData = (PFNGLINVALIDATEBUFFERDATAPROC) getOpenGLProc("glInvalidateBufferData");
	gglInvalidateFramebuffer = (PFNGLINVALIDATEFRAMEBUFFERPROC) getOpenGLProc("glInvalidateFramebuffer");
	gglInvalidateSubFramebuffer = (PFNGLINVALIDATESUBFRAMEBUFFERPROC) getOpenGLProc("glInvalidateSubFramebuffer");
	gglMultiDrawArraysIndirect = (PFNGLMULTIDRAWARRAYSINDIRECTPROC) getOpenGLProc("glMultiDrawArraysIndirect");
	gglMultiDrawElementsIndirect = (PFNGLMULTIDRAWELEMENTSINDIRECTPROC) getOpenGLProc("glMultiDrawElementsIndirect");
	gglGetProgramInterfaceiv = (PFNGLGETPROGRAMINTERFACEIVPROC) getOpenGLProc("glGetProgramInterfaceiv");
	gglGetProgramResourceIndex = (PFNGLGETPROGRAMRESOURCEINDEXPROC) getOpenGLProc("glGetProgramResourceIndex");
	gglGetProgramResourceName = (PFNGLGETPROGRAMRESOURCENAMEPROC) getOpenGLProc("glGetProgramResourceName");
	gglGetProgramResourceiv = (PFNGLGETPROGRAMRESOURCEIVPROC) getOpenGLProc("glGetProgramResourceiv");
	gglGetProgramResourceLocation = (PFNGLGETPROGRAMRESOURCELOCATIONPROC) getOpenGLProc("glGetProgramResourceLocation");
	gglGetProgramResourceLocationIndex = (PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) getOpenGLProc("glGetProgramResourceLocationIndex");
	gglShaderStorageBlockBinding = (PFNGLSHADERSTORAGEBLOCKBINDINGPROC) getOpenGLProc("glShaderStorageBlockBinding");
	gglTexBufferRange = (PFNGLTEXBUFFERRANGEPROC) getOpenGLProc("glTexBufferRange");
	gglTextureBufferRangeEXT = (PFNGLTEXTUREBUFFERRANGEEXTPROC) getOpenGLProc("glTextureBufferRangeEXT");
	gglTexStorage2DMultisample = (PFNGLTEXSTORAGE2DMULTISAMPLEPROC) getOpenGLProc("glTexStorage2DMultisample");
	gglTexStorage3DMultisample = (PFNGLTEXSTORAGE3DMULTISAMPLEPROC) getOpenGLProc("glTexStorage3DMultisample");
	gglTextureStorage2DMultisampleEXT = (PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC) getOpenGLProc("glTextureStorage2DMultisampleEXT");
	gglTextureStorage3DMultisampleEXT = (PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC) getOpenGLProc("glTextureStorage3DMultisampleEXT");
}
}
static GLuint g_shaderProgram = 0;
static int          g_AttribLocationTex = 0, g_AttribLocationProjMtx = 0;                                // Uniforms location
static int          g_AttribLocationVtxPos = 0, g_AttribLocationVtxUV = 0, g_AttribLocationVtxColor = 0; // Vertex attributes location
static unsigned int g_VboHandle = 0, g_ElementsHandle = 0;

GLuint _createShader(GLenum type, const char * text)
{
	auto shader = glCreateShader(type);
	glShaderSource(shader, 1, &text, nullptr );
	glCompileShader(shader);
	return shader;
}

GLuint _createShaderProgram(GLuint v, GLuint f, GLuint g)
{
	auto program = glCreateProgram();
	glAttachShader(program, v);
	glAttachShader(program, f);
	if( g )
		glAttachShader(program, g);
	glLinkProgram(program);
	return program;
}

bool _checkShader(GLuint shader)
{
	GLint compile_result = 0;
	glGetShaderiv(shader, GL_COMPILE_STATUS, &compile_result);
	if(compile_result == GL_FALSE)
	{
		GLint loglen=0;
		glGetShaderiv(shader, GL_INFO_LOG_LENGTH, &loglen);
		char * buf = new char[loglen+1];
		buf[loglen]=0;
		glGetShaderInfoLog(shader, loglen, NULL, buf);
		std::fprintf(stderr,"Shader error: %s\n", buf);
		delete[] buf;
		return false;
	}
	return true;
}

bool _checkProgram(GLuint program)
{
	GLint link_result = 0;
	glGetProgramiv(program, GL_LINK_STATUS, &link_result);
	if (link_result == GL_FALSE)
	{
		GLint loglen=0;
		glGetProgramiv(program, GL_INFO_LOG_LENGTH, &loglen);
		char * buf = new char[loglen+1];
		buf[loglen]=0;
		glGetProgramInfoLog(program, loglen, NULL, buf);
		std::fprintf(stderr,"Shader error: %s\n", buf);
		delete[] buf;
		return false;
	}
	return true;
}

bool createShader( const char * v, const char * f, const char * g, GLuint& out_program )
{
	auto shader_vert = _createShader(GL_VERTEX_SHADER,v);
	if(!_checkShader(shader_vert))
	{
		return false;
	}
	auto shader_frag = _createShader(GL_FRAGMENT_SHADER,f);
	if(!_checkShader(shader_frag))
	{
		return false;
	}

	GLuint shader_geom = 0;
	if( g )
	{
		shader_geom = _createShader(GL_GEOMETRY_SHADER,g);
		if(!_checkShader(shader_geom))
		{
			return false;
		}
	}

	out_program = _createShaderProgram(shader_vert,shader_frag, shader_geom);
	if(!_checkProgram(out_program))
	{
		return false;
	}

	glDeleteShader(shader_vert);
    glDeleteShader(shader_frag);
    if(shader_geom != 0)
		glDeleteShader(shader_geom);

	return true;
}

bool Gui::GraphicsSystem_OpenGL3Init()
{
	loadOpenGLProcs();
	const char * text_v = 
		"#version 130\n"
		"in vec2 Position;\n"
        "in vec2 UV;\n"
        "in vec4 Color;\n"
		"uniform mat4 ProjMtx;\n"
		"out vec2 Frag_UV;\n"
        "out vec4 Frag_Color;\n"
		"void main(){\n"
        "    Frag_UV = UV;\n"
        "    Frag_Color = Color;\n"
        "    gl_Position = ProjMtx * vec4(Position.xy,0,1);\n"
        "}\n";
	const char * text_f = 
		"#version 130\n" 
        "uniform sampler2D Texture;\n"
        "in vec2 Frag_UV;\n"
        "in vec4 Frag_Color;\n"
        "out vec4 Out_Color;\n"
		"void main(){\n"
        "    Out_Color = Frag_Color * texture(Texture, Frag_UV.st);\n"
		"}\n";

	if( !createShader( text_v, text_f, nullptr, g_shaderProgram ) )
		return false;

	g_AttribLocationTex      = glGetUniformLocation(g_shaderProgram, "Texture");
    g_AttribLocationProjMtx  = glGetUniformLocation(g_shaderProgram, "ProjMtx");
    g_AttribLocationVtxPos   = glGetAttribLocation(g_shaderProgram, "Position");
    g_AttribLocationVtxUV    = glGetAttribLocation(g_shaderProgram, "UV");
    g_AttribLocationVtxColor = glGetAttribLocation(g_shaderProgram, "Color");

	glGenBuffers(1, &g_VboHandle);
    glGenBuffers(1, &g_ElementsHandle);

	return true;
}

void Gui::GraphicsSystem_OpenGL3Draw(Gui::GuiSystem* gui)
{
	// Backup GL state
    GLenum last_active_texture; glGetIntegerv(GL_ACTIVE_TEXTURE, (GLint*)&last_active_texture);
    glActiveTexture(GL_TEXTURE0);
    GLint last_program; glGetIntegerv(GL_CURRENT_PROGRAM, &last_program);
    GLint last_texture; glGetIntegerv(GL_TEXTURE_BINDING_2D, &last_texture);
#ifdef GL_SAMPLER_BINDING
    GLint last_sampler; glGetIntegerv(GL_SAMPLER_BINDING, &last_sampler);
#endif
    GLint last_array_buffer; glGetIntegerv(GL_ARRAY_BUFFER_BINDING, &last_array_buffer);
    GLint last_vertex_array_object; glGetIntegerv(GL_VERTEX_ARRAY_BINDING, &last_vertex_array_object);
#ifdef GL_POLYGON_MODE
    GLint last_polygon_mode[2]; glGetIntegerv(GL_POLYGON_MODE, last_polygon_mode);
#endif
    GLint last_viewport[4]; glGetIntegerv(GL_VIEWPORT, last_viewport);
    GLint last_scissor_box[4]; glGetIntegerv(GL_SCISSOR_BOX, last_scissor_box);
    GLenum last_blend_src_rgb; glGetIntegerv(GL_BLEND_SRC_RGB, (GLint*)&last_blend_src_rgb);
    GLenum last_blend_dst_rgb; glGetIntegerv(GL_BLEND_DST_RGB, (GLint*)&last_blend_dst_rgb);
    GLenum last_blend_src_alpha; glGetIntegerv(GL_BLEND_SRC_ALPHA, (GLint*)&last_blend_src_alpha);
    GLenum last_blend_dst_alpha; glGetIntegerv(GL_BLEND_DST_ALPHA, (GLint*)&last_blend_dst_alpha);
    GLenum last_blend_equation_rgb; glGetIntegerv(GL_BLEND_EQUATION_RGB, (GLint*)&last_blend_equation_rgb);
    GLenum last_blend_equation_alpha; glGetIntegerv(GL_BLEND_EQUATION_ALPHA, (GLint*)&last_blend_equation_alpha);
    GLboolean last_enable_blend = glIsEnabled(GL_BLEND);
    GLboolean last_enable_cull_face = glIsEnabled(GL_CULL_FACE);
    GLboolean last_enable_depth_test = glIsEnabled(GL_DEPTH_TEST);
    GLboolean last_enable_scissor_test = glIsEnabled(GL_SCISSOR_TEST);

    glEnable(GL_BLEND);
    glBlendEquation(GL_FUNC_ADD);
    glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
    glDisable(GL_CULL_FACE);
    glDisable(GL_DEPTH_TEST);
    glEnable(GL_SCISSOR_TEST);
#ifdef GL_POLYGON_MODE
    glPolygonMode(GL_FRONT_AND_BACK, GL_FILL);
#endif

	glViewport(0, 0, (GLsizei)gui->m_OSWindowClientSize.x, (GLsizei)gui->m_OSWindowClientSize.y);
    float L = 0;
    float R = (float)gui->m_OSWindowClientSize.x;
    float T = 0;
    float B = (float)gui->m_OSWindowClientSize.y;

    float ortho_projection[4][4] =
    {
        { 2.0f/(R-L),   0.0f,         0.0f,   0.0f },
        { 0.0f,         2.0f/(T-B),   0.0f,   0.0f },
        { 0.0f,         0.0f,        -1.0f,   0.0f },
        { (R+L)/(L-R),  (T+B)/(B-T),  0.0f,   1.0f },
    };

	glUseProgram(g_shaderProgram);
    glUniform1i(g_AttribLocationTex, 0);
    glUniformMatrix4fv(g_AttribLocationProjMtx, 1, GL_FALSE, &ortho_projection[0][0]);
#ifdef GL_SAMPLER_BINDING
    glBindSampler(0, 0);
#endif
	GLuint vertex_array_object = 0;
    glGenVertexArrays(1, &vertex_array_object);
    glBindVertexArray(vertex_array_object);

    glBindBuffer(GL_ARRAY_BUFFER, g_VboHandle);
    glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, g_ElementsHandle);
    glEnableVertexAttribArray(g_AttribLocationVtxPos);
    glEnableVertexAttribArray(g_AttribLocationVtxUV);
    glEnableVertexAttribArray(g_AttribLocationVtxColor);
    glVertexAttribPointer(g_AttribLocationVtxPos, 2, GL_FLOAT, GL_FALSE, sizeof(Gui::Vertex), 0);
    glVertexAttribPointer(g_AttribLocationVtxUV, 2, GL_FLOAT, GL_FALSE, sizeof(Gui::Vertex), (unsigned char*)NULL + (2 * sizeof(float)));
    glVertexAttribPointer(g_AttribLocationVtxColor, 4, GL_FLOAT, GL_FALSE, sizeof(Gui::Vertex), (unsigned char*)NULL + (4 * sizeof(float)));



	auto draw = [&](Gui::DrawCommands* cmd)
	{
		glScissor((GLint)cmd->clipRect.x, (GLint)(gui->m_OSWindowClientSize.y - cmd->clipRect.w), (GLsizei)(cmd->clipRect.z - cmd->clipRect.x), (GLsizei)(cmd->clipRect.w - cmd->clipRect.y));

		glBufferData(GL_ARRAY_BUFFER, (GLsizeiptr)cmd->verts.size() * sizeof(Gui::Vertex), (const GLvoid*)&cmd->verts.data()[0], GL_STREAM_DRAW);
        glBufferData(GL_ELEMENT_ARRAY_BUFFER, (GLsizeiptr)cmd->inds.size() * sizeof(unsigned short), (const GLvoid*)&cmd->inds.data()[0], GL_STREAM_DRAW);
        
		unsigned long long * t_ptr = (unsigned long long *)cmd->texture.texture_address;

		if( cmd->texture.texture_address == 0 )
			t_ptr = (unsigned long long *)gui->getWhiteTexture()->texture_address;
		
		if( t_ptr )
		{
			auto tid = (GLuint)*t_ptr;
			//printf("tid [%u]\n", tid);
			glBindTexture(GL_TEXTURE_2D, tid);
		}

		glDrawElements(GL_TRIANGLES, (GLsizei)cmd->inds.size(), GL_UNSIGNED_SHORT, 0 );
	};

	for( size_t i = 0, sz = gui->m_drawCommandGroups.size(); i < sz; ++i )
	{
		auto draw_command_group = gui->m_drawCommandGroups[ i ];
		for( size_t o = 0, osz = draw_command_group->m_size; o < osz; ++o )
		{
			draw(draw_command_group->m_commands.data()[ o ]);
		}
		//draw(gui->m_drawCommands.data()[ i ]);
	//		printf( "%i %i %i %i\n", cmd.clipRect.x,cmd.clipRect.y,cmd.clipRect.z,cmd.clipRect.w);
	}
	

    glDeleteVertexArrays(1, &vertex_array_object);

	// ==============
	// Restore modified GL state
    glUseProgram(last_program);
    glBindTexture(GL_TEXTURE_2D, last_texture);
#ifdef GL_SAMPLER_BINDING
    glBindSampler(0, last_sampler);
#endif
    glActiveTexture(last_active_texture);
    glBindVertexArray(last_vertex_array_object);
    glBindBuffer(GL_ARRAY_BUFFER, last_array_buffer);
    glBlendEquationSeparate(last_blend_equation_rgb, last_blend_equation_alpha);
    glBlendFuncSeparate(last_blend_src_rgb, last_blend_dst_rgb, last_blend_src_alpha, last_blend_dst_alpha);
    if (last_enable_blend) glEnable(GL_BLEND); else glDisable(GL_BLEND);
    if (last_enable_cull_face) glEnable(GL_CULL_FACE); else glDisable(GL_CULL_FACE);
    if (last_enable_depth_test) glEnable(GL_DEPTH_TEST); else glDisable(GL_DEPTH_TEST);
    if (last_enable_scissor_test) glEnable(GL_SCISSOR_TEST); else glDisable(GL_SCISSOR_TEST);
#ifdef GL_POLYGON_MODE
    glPolygonMode(GL_FRONT_AND_BACK, (GLenum)last_polygon_mode[0]);
#endif
    glViewport(last_viewport[0], last_viewport[1], (GLsizei)last_viewport[2], (GLsizei)last_viewport[3]);
    glScissor(last_scissor_box[0], last_scissor_box[1], (GLsizei)last_scissor_box[2], (GLsizei)last_scissor_box[3]);
}

void Gui::GraphicsSystem_OpenGL3Release()
{
	if (g_VboHandle)        { glDeleteBuffers(1, &g_VboHandle); g_VboHandle = 0; }
	if( g_shaderProgram )   { glDeleteProgram(g_shaderProgram); g_shaderProgram = 0; }

#ifdef KRGUI_PLATFORM_WINDOWS
	if(g_OpenGL_lib)
	{
		FreeLibrary(g_OpenGL_lib);
	}
#else
#error For Windows
#endif
}


Gui::Texture* Gui::GraphicsSystem_OpenGL3CreateTexture( Gui::Image* image )
{
	assert(image);

	GLuint gltexture;
	glGenTextures(1, &gltexture);
    glBindTexture(GL_TEXTURE_2D, gltexture);
	glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, image->m_width, image->m_height, 0, GL_BGRA, GL_UNSIGNED_BYTE, image->m_data);
	
	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT);
	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT);
	
	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);
    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);

	Gui::Texture* texture = new Gui::Texture;
	texture->height  = image->m_height;
	texture->width   = image->m_width;
	texture->texture_value = gltexture;
	texture->texture_address = (unsigned long long)&texture->texture_value;

	return texture;
}

void Gui::GraphicsSystem_OpenGL3DestroyTexture( Gui::Texture* t )
{
	assert(t);
	if( t )
	{
		if( t->texture_value )
		{
			GLuint ts[1] = 
			{
				(GLuint)t->texture_value
			};
			glDeleteTextures(1, ts);
		}
		delete t;
	}
}

#endif